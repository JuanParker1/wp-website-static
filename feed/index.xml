
<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>APIMatic</title>
	<atom:link href="/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>APIMatic is an API documentation tool that provides a complete set of DX components such as autogenerated SDKs, API portal, API docs, live code samples, and more.</description>
	<lastBuildDate>Sat, 23 Apr 2022 13:31:31 +0000</lastBuildDate>
	<language>en</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.9.3</generator>

<image>
	<url>/wp-content/uploads/2021/10/cropped-cropped-apimaticio-favicon-1-32x32.png</url>
	<title>APIMatic</title>
	<link>/</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>[Webinar Recap] Low API Adoption: Have You Blamed Your API Portal Yet?</title>
		<link>/blog/webinar-recap-low-api-adoption-have-you-blamed-your-api-portal-yet/</link>
		
		<dc:creator><![CDATA[Nida I Zamir]]></dc:creator>
		<pubDate>Fri, 22 Apr 2022 13:02:55 +0000</pubDate>
				<category><![CDATA[API Portal]]></category>
		<category><![CDATA[Code Samples]]></category>
		<category><![CDATA[SDK]]></category>
		<category><![CDATA[Webinar]]></category>
		<category><![CDATA[API portal]]></category>
		<category><![CDATA[Developer Experience]]></category>
		<category><![CDATA[Sdks]]></category>
		<guid isPermaLink="false">/?p=24543</guid>

					<description><![CDATA[<p>You create a great API and invest resources, time, and energy into it, but it turns out it’s not being adopted as much as you had anticipated. While your first instinct might be to investigate the API, there could be other factors at play here. For starters, is your API documentation in-sync with the API? [&#8230;]</p>
<p>The post <a rel="nofollow" href="/blog/webinar-recap-low-api-adoption-have-you-blamed-your-api-portal-yet/">[Webinar Recap] Low API Adoption: Have You Blamed Your API Portal Yet?</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></description>
										<content:encoded><![CDATA[
<p>You create a great API and invest resources, time, and energy into it, but it turns out it’s not being adopted as much as you had anticipated. While your first instinct might be to investigate the API, there could be other factors at play here.<br><br>For starters, is your API documentation in-sync with the API? Do you provide only HTTP references or language-specific documentation? Are there any code samples that your API users can copy-paste directly onto their IDEs? Are there any SDKs that your users can integrate easily into their applications?<br><br>This might become a little overwhelming until you shift your perspective to how your API users are interacting with your API. Understanding your API user’s journey can help you identify where your API Portal may need more focus, so we break that journey into three phases:<br></p>



<ul><li>Discovery</li><li>Exploration</li><li>Integration</li></ul>



<figure class="wp-block-image"><img src="https://lh3.googleusercontent.com/Dty2T3dFow2x0t13mbRYRuMv9b3rBDv_-7m2MK_L0CJ8zeYOwTbTPGVIg8pQkzbOVIsMr89EW0pETGJjDFS38Gae4FzK6S5K60z383z82bGlke35NmQEUoSXeFuM8wTcWwxn9fU" alt=""/></figure>



<p>In <a href="https://www.youtube.com/watch?v=pRl2JNwgu3g&amp;ab_channel=APIMaticOfficial" target="_blank" rel="noreferrer noopener">this webinar</a>, APIMatic’s Chief Product Architect, Mehdi Raza, and API Problem Solver, Keith Casey, present this perspective in detail and how mapping your API Portal’s features against each phase make it much easier to create a streamlined developer experience for your users. This eventually results in more adoption of your API as you provide them an experience for their use case specifically.</p>



<p>Mehdi goes through examples of existing API portals from the API consumer’s point of view and discusses the landing page, language-specific documentation styles, good and bad code samples, SDKs, and more. The interactive presentation is followed by an informative and conversational Q&amp;A session, one question being:&nbsp;</p>



<p><strong><em>Q: If you could make one improvement to any API portal, what would be the one thing that people would benefit most from?</em></strong></p>



<p>A: <em>The one thing that people can benefit most in the explore phase especially is getting the use-cases of your API users laid properly, and figuring out which ones are the most important. So that you can make them the front piece of your API portal, and it helps out your API users straight away.</em></p>



<h2>Webinar Notes</h2>



<p>[<a href="https://youtu.be/pRl2JNwgu3g?t=19">0:17</a>] Introduction and premise</p>



<p>[<a href="https://youtu.be/pRl2JNwgu3g?t=177">2:58</a>] Low adoption after your API launch, what went wrong?</p>



<p>[<a href="https://youtu.be/pRl2JNwgu3g?t=348">5:48</a>] Understanding the API consumer journey</p>



<p>[<a href="https://youtu.be/pRl2JNwgu3g?t=646">10:48</a>] Optimizing the API Portal for the Discovery phase</p>



<p>[<a href="https://youtu.be/pRl2JNwgu3g?t=668">11:10</a>] Experiments for webinar viewers (good and bad API Portal)</p>



<p>[<a href="https://youtu.be/pRl2JNwgu3g?t=1004">16:48</a>] Optimizing the API Portal for the Exploration phase</p>



<p>[<a href="https://youtu.be/pRl2JNwgu3g?t=1420">23:47</a>] Optimizing the API Portal for the Integration phase</p>



<p>[<a href="https://youtu.be/pRl2JNwgu3g?t=1583">26:28</a>] Code samples: best and worst practices</p>



<p>[<a href="https://youtu.be/pRl2JNwgu3g?t=1994">33:10</a>] SDKs: why are they important, and how are Stripe and other big names using them?</p>



<p>[<a href="https://youtu.be/pRl2JNwgu3g?t=2265">37:52</a>] Last trick: the secret behind API adoption revealed</p>



<p>[<a href="https://youtu.be/pRl2JNwgu3g?t=2434">40:35</a>] Q&amp;A session</p>



<h2>Watch The Webinar</h2>



<figure class="wp-block-embed is-type-video is-provider-youtube wp-block-embed-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
<iframe title="[Webinar] Low API Adoption: Have You Blamed Your API Portal Yet?" width="653" height="367" src="https://www.youtube.com/embed/pRl2JNwgu3g?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
</div></figure>



<h2>Additional Resources</h2>



<ul><li><a href="https://www.apimatic.io/developer-experience-portal/" target="_blank" rel="noreferrer noopener">APIMatic Developer Experience Portal</a></li><li><a href="https://www.apimatic.io/continuous-code-generation" target="_blank" rel="noreferrer noopener">Code Generation-as-a-Service</a></li><li><a href="https://www.apimatic.io/blog/the-customers-pov-how-do-sdks-and-api-documentation-help-business/" target="_blank" rel="noreferrer noopener">How are SDKs and Docs Helping API Businesses?</a></li><li><a href="https://www.apimatic.io/blog/the-great-sdk-battle-build-vs-buy/" target="_blank" rel="noreferrer noopener">The Great SDK Battle: Build vs Buy</a></li></ul>



<p>For any questions, comments, or feedback, please visit <a href="http://apimatic.io/">our website</a> or <a href="https://www.apimatic.io/request-demo/">request a demo</a> with our experts.</p>
<p>The post <a rel="nofollow" href="/blog/webinar-recap-low-api-adoption-have-you-blamed-your-api-portal-yet/">[Webinar Recap] Low API Adoption: Have You Blamed Your API Portal Yet?</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>How to Integrate Java SDKs into Android Applications?</title>
		<link>/blog/how-to-integrate-java-sdks-into-android-applications/</link>
		
		<dc:creator><![CDATA[Muhammad Sufyan]]></dc:creator>
		<pubDate>Fri, 18 Mar 2022 14:28:54 +0000</pubDate>
				<category><![CDATA[APIMATIC]]></category>
		<category><![CDATA[CodeGen]]></category>
		<category><![CDATA[SDK]]></category>
		<category><![CDATA[Android App]]></category>
		<category><![CDATA[android application]]></category>
		<category><![CDATA[Apimatic]]></category>
		<category><![CDATA[auto-generated SDKs]]></category>
		<category><![CDATA[Java SDK]]></category>
		<guid isPermaLink="false">https://apimatic.io/blog/?p=1803</guid>

					<description><![CDATA[<p>Your mobile/Android application can talk to any API with the low-code approach through client SDKs. Client SDKs are independent internal libraries for your application that focus on the end-to-end flow for an API. They cut down the manual process of writing a whole client and related components, providing you with the best developer experience, and [&#8230;]</p>
<p>The post <a rel="nofollow" href="/blog/how-to-integrate-java-sdks-into-android-applications/">How to Integrate Java SDKs into Android Applications?</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></description>
										<content:encoded><![CDATA[<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p class=""><img class="aligncenter wp-image-1816 " src="/wp-content/uploads/2022/04/Integrate-Java-SDKs-into-Android-02-1024x498.png" alt="" width="729" height="355"></p>
<p class=""><span style="font-weight: 400;">Your mobile/Android application can talk to any API with the low-code approach through client SDKs. </span><span style="font-weight: 400;">Client SDKs are independent internal libraries for your application that focus on the end-to-end flow for an API.</span><span style="font-weight: 400;"> They cut down the manual process of writing a whole client and related components, </span><span style="font-weight: 400;">providing you with the best developer experience, and increasing API adoption</span><span style="font-weight: 400;">. You just have to import an auto-generated end-to-end SDK and focus on the core business logic in your application.</span></p>
<p><a href="https://apimatic.io/"><span style="font-weight: 400;">APIMatic</span></a> <span style="font-weight: 400;">is a developer experience platform that provides automatic code generation for API specifications, in multiple popular languages. In this blog, we will be discussing how to integrate Java SDKs into Android applications.</span></p>
<h2 class=""><span style="font-weight: 400;">Why Java Libraries Instead of Android Native Libraries?</span></h2>
<p class=""><span style="font-weight: 400;">An AAR (i.e. Android ARchive) file can be included in the build process of an Android application similar to a JAR (i.e. Java ARchive) file. Both can serve the same purpose but the main difference between a JAR and an AAR is that AARs can include resources such as layouts, drawables, and more.</span></p>
<p class=""><span style="font-weight: 400;">For an API client SDK, you don&#8217;t need Android components and resources, but some classes, making the library lightweight that developers can quickly interact with to call your APIs, making a JAR library a better option than AAR.</span></p>
<p class=""><span style="font-weight: 400;">Another advantage of using Java libraries is that JAR can be used for IDEs like eclipse and Android Studio without any complicated steps. Also, JAR, in contrast to AAR, can be used with any Java application which makes it technology-independent in terms of Java-specific applications like web, desktop, and Android apps.</span></p>
<h2><span style="font-weight: 400;">Inside the Java SDK</span></h2>
<p class=""><span style="font-weight: 400;">APIMatic SDKs adhere to the best </span><a href="https://docs.apimatic.io/generate-sdks/sdk-coding-standards/"><span style="font-weight: 400;">coding practices and standards</span></a><span style="font-weight: 400;">&nbsp;and support the latest dependencies and versions for full coverage. The Java SDK uses Maven as its project management tool which allows it to adjust itself in the Maven ecosystem.&nbsp;</span></p>
<p class=""><span style="font-weight: 400;">In an Android application, the Gradle build system makes it easier to include external binaries and other library modules to your build as dependencies. </span><span style="font-weight: 400;">These dependencies can be located on your machine or in a remote repository, and any transitive dependencies declared are automatically included as well.</span><span style="font-weight: 400;"><br />
</span></p>
<p class=""><span style="font-weight: 400;">Having Gradle support of adding Maven dependencies directly makes it easier for developers to include Maven projects like an APIMatic SDK as a dependency. This enables you to consume Maven libraries for any application built on top of Java or Kotlin languages. APIMatic Java SDKs have this ability and allow you to accomplish what you need with some clicks.</span></p>
<p class=""><span style="font-weight: 400;">In this blog, we will use our public </span><a href="https://github.com/apimatic/calculator-sdk"><span style="font-weight: 400;">Calculator SDK</span></a><span style="font-weight: 400;"> as an example to demonstrate how to integrate Java SDKs into Android applications. The Calculator SDK contains simple operations like addition, multiplication, subtraction, division, and a README file that walks you through the setup installation and highlights the documentation of the modules involved.</span><span style="font-weight: 400;"><br />
</span><span style="font-weight: 400;"><br />
</span><span style="font-weight: 400;">The published Java SDK has the following Maven identifiers:</span></p>
<pre class=""><code class="language-xml">Group-id: io.github.apimatic
Artifact-id: sample-calculator-sdk
Version: 1.0.0
</code></pre>
<h2 class=""><span style="font-weight: 400;">How to Integrate Java SDKs into Android Applications?</span></h2>
<p class=""><span style="font-weight: 400;">There are two ways to integrate Java SDKs into Android applications:</span></p>
<ul class="">
<li style="font-weight: 400;"><span style="font-weight: 400;">Declare the dependency directly using groupId, artifact, and version</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">Utilize the GUI tool provided by Android Studio</span></li>
</ul>
<p>&nbsp;</p>
<p class=""><span style="font-weight: 400;">The source of the artifact could be one of the following:</span></p>
<ul class="">
<li style="font-weight: 400;"><span style="font-weight: 400;">A Remote Artifact (Gradle will resolve the artifact from Maven central repository)</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">A Local Artifact (Gradle will resolve the artifact from the local Maven repository)</span><span style="font-weight: 400;"><br />
</span></li>
</ul>
<h3><span style="font-weight: 400;">Import Remote Dependency</span></h3>
<p><span style="font-weight: 400;">Note: A prerequisite to import the remote dependency is that the Java SDK should already be published on the Maven repository. In our case, the calculator SDK is published on Maven Central under the group id </span><a href="https://search.maven.org/search?q=g:io.github.apimatic"><span style="font-weight: 400;">io.github.apimatic</span></a><span style="font-weight: 400;">.</span></p>
<h3 class=""><span style="font-weight: 400;">Option 1: Add Dependency Using Android Studio</span></h3>
<p class=""><span style="font-weight: 400;">Follow these steps to include the dependency:</span></p>
<ol class="">
<li style="font-weight: 400;"><span style="font-weight: 400;">In the Android project structure, select </span><b>Dependencies </b><span style="font-weight: 400;">from the left navigation section. Select the target module and click on </span><b>Library Dependency </b><span style="font-weight: 400;">as shown: <img class=" wp-image-1806 aligncenter" src="/wp-content/uploads/2022/04/image3.png" alt="" width="657" height="344"></span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">In the subsequent dialog box, search for the group id </span><b>io.github.apimatic</b><span style="font-weight: 400;">. Configure your dependency if required (labeled 2) and click </span><b>OK</b><span style="font-weight: 400;">.<img class=" wp-image-1804 aligncenter" src="/wp-content/uploads/2022/04/image1.jpg" alt="" width="659" height="470"></span></li>
<li><span style="font-weight: 400;">As the last step, click on </span><b>Apply</b><span style="font-weight: 400;"> and </span><b>OK</b><span style="font-weight: 400;">. Gradle will start syncing.</span></li>
</ol>
<h3 class=""><span style="font-weight: 400;">Option 2: Adding the Dependency Directly&nbsp;</span></h3>
<p class=""><span style="font-weight: 400;">You can also add the dependency directly in the respective module’s </span><b>build.gradle</b><span style="font-weight: 400;"> file. This can be achieved by setting a lookup configuration for Maven Central in Dependency Resolution Management through the root level build file, i.e. build.gradle, shown below:</span></p>
<pre class=""><code class="language-xml">buildscript {
    ...
    repositories {
        ...
        MavenCentral()
        ...
    }
    ...
}
</code></pre>
<p class=""><span style="font-weight: 400;">Add the artifact information like </span><b>groupId</b><span style="font-weight: 400;">, </span><b>artifactId</b><span style="font-weight: 400;">, and </span><b>version </b><span style="font-weight: 400;">in the </span><b>dependencies </b><span style="font-weight: 400;">section of the respective module, for example:</span><span style="font-weight: 400;"><br />
</span></p>
<pre class=""><code class="language-xml">dependencies {
    ...
    implementation &#039;io.github.apimatic:sample-calculator-sdk:1.0.0&#039;
    ...
}</code></pre>
<p><span style="font-weight: 400;">Follow the proper format for Maven Central as prescribed in </span><a href="https://docs.gradle.org/current/userguide/declaring_dependencies.html"><span style="font-weight: 400;">Gradle official documentation</span></a><span style="font-weight: 400;">. Read more on </span><a href="https://docs.gradle.org/current/userguide/single_versions.html"><span style="font-weight: 400;">Gradle Version Ranging</span></a><span style="font-weight: 400;">.&nbsp;&nbsp;</span></p>
<h3 class=""><span style="font-weight: 400;">Import Local Dependency</span></h3>
<p class=""><span style="font-weight: 400;">Gradle can consume dependencies available in the local Maven repository (i.e. in-home directory under </span><b>.m2</b><span style="font-weight: 400;"> directory). The target artifact should already exist in the local Maven repository. In order to achieve this, use the following Maven build command to build the project and have a snapshot in the local repository:</span></p>
<pre class=""><code class="language-bash">mvn clean install
</code></pre>
<p class=""><span style="font-weight: 400;">This will make the artifact locally available. Now, it can be added as a dependency or external JAR.</span></p>
<h3 class=""><span style="font-weight: 400;">Option 1: Add Dependency as External JAR</span></h3>
<ol class="">
<li style="font-weight: 400;"><span style="font-weight: 400;">Locate the JAR file in the system. Copy and paste the SDK JAR file in </span><b>libs </b><span style="font-weight: 400;">directory of your application.<img class="size-full wp-image-1807 aligncenter" src="/wp-content/uploads/2022/04/image4.png" alt="" width="595" height="417"></span></li>
<li><span style="font-weight: 400;">Now right click on the copied JAR file and click </span><b>Add As Library.<img class=" wp-image-1805 aligncenter" src="/wp-content/uploads/2022/04/image2.png" alt="" width="598" height="592"></b></li>
<li><span style="font-weight: 400;">Once added, a popup will appear to confirm the target module, select the module and click </span><b>OK</b><span style="font-weight: 400;">.<img class=" wp-image-1808 aligncenter" src="/wp-content/uploads/2022/04/image5.png" alt="" width="398" height="116"></span></li>
</ol>
<h3 class=""><span style="font-weight: 400;">Option 2: Add Dependency Directly</span></h3>
<p class=""><span style="font-weight: 400;">Allow Gradle to search in the local Maven repository by adding </span><b>mavenLocal()</b><span style="font-weight: 400;"> configuration in the </span><b>settings.gradle</b><span style="font-weight: 400;"> file (i.e. project/root level Gradle settings).</span><span style="font-weight: 400;"><br />
</span></p>
<pre class=""><code class="language-xml">buildscript {
    ...
    repositories {
        ...
        mavenLocal()
        ...
    }
    ...
}</code></pre>
<p class=""><span style="font-weight: 400;">Add the dependency in </span><b>build.gradle</b><span style="font-weight: 400;"> (i.e. module-level Gradle settings) as shown:</span></p>
<pre class=""><code class="language-xml">dependencies {
    ...
    implementation &#039;io.github.apimatic:sample-calculator-sdk:1.0.0&#039;
    ...
}
</code></pre>
<p><span style="font-weight: 400;">The dependency format is in the form of &lt;</span><b>groupId:artifactId:version&gt;</b><span style="font-weight: 400;"> but it can be applied through different formats as prescribed on </span><a href="https://docs.gradle.org/current/userguide/declaring_dependencies.html"><span style="font-weight: 400;">Gradle official documentation</span></a><span style="font-weight: 400;">. Gradle also supports version ranging.</span></p>
<p class=""><span style="font-weight: 400;">Once Gradle is synchronized, the application is ready to consume the added SDK dependency.</span></p>
<h2 class=""><span style="font-weight: 400;">Using the Imported SDK in Java and Kotlin</span></h2>
<p class=""><span style="font-weight: 400;">Once the dependency resolution is done, you can start using the SDK components in your application.&nbsp;</span></p>
<h3 class=""><span style="font-weight: 400;">Java Code Sample</span></h3>
<p class=""><span style="font-weight: 400;">The following code sample in Java shows how easily you can initialize the client and use the Multiply endpoint of the integrated Calculator SDK in the Android application:</span></p>
<pre class=""><code class="language-java">// client initialization in Java

APIMATICCalculatorClient client = new APIMATICCalculatorClient.Builder()
    .httpClientConfig(configBuilder -&gt; configBuilder
            .timeout(0))
    .environment(Environment.PRODUCTION)
    .build();

</code></pre>
<pre class=""><code class="language-java">// Preparing and Calling API Endpoint

GetCalculateInput getCalculateInput = new GetCalculateInput();
getCalculateInput.setOperation(OperationTypeEnum.MULTIPLY);
getCalculateInput.setX(222.14);
getCalculateInput.setY(165.14);

client.getSimpleCalculatorController()
        .getCalculateAsync(getCalculateInput)
            .thenAccept(result -&gt; {
                // TODO success callback handler
            }).exceptionally(exception -&gt; {
                // TODO failure callback handler
                return null;
            });

</code></pre>
<h3><span style="font-weight: 400;">Kotlin Code Sample</span></h3>
<p class=""><span style="font-weight: 400;">The following code sample in Kotlin shows how easy it is to initialize the client and use the Multiply endpoint of the integrated Calculator SDK in your Android application:</span></p>
<pre class=""><code class="language-kotlin">// client initialization in Kotlin

var client: APIMATICCalculatorClient = APIMATICCalculatorClient.Builder()
    .httpClientConfig { configBuilder: HttpClientConfiguration.Builder -&gt;
        configBuilder
            .timeout(0)
    }
    .environment(Environment.PRODUCTION)
    .build()

</code></pre>
<pre class=""><code class="language-kotlin">// Preparing and Calling API Endpoint

val getCalculateInput = GetCalculateInput()
getCalculateInput.operation = OperationTypeEnum.MULTIPLY
getCalculateInput.x = 222.14
getCalculateInput.y = 165.14

client.simpleCalculatorController.getCalculateAsync(getCalculateInput)
   .thenAccept { result -&gt;
       // TODO success callback handler
   }
   .exceptionally {
       // TODO failure callback handler
       null
   }</code></pre>
<h2 class=""><span style="font-weight: 400;">Conclusion</span></h2>
<p class=""><span style="font-weight: 400;">APIMatic Java SDKs are fully compliant with the Android app environment making app development quicker. With APIMatic, you can focus on the business domain and leave the server or third-party communication to APIMatic SDKs. APIMatic excels in providing a complete developer experience with language-specific documentation, interactive API portals, and SDKs with end-to-end test coverage.</span></p>
</div>
</div>
</div>
</div>
<p>The post <a rel="nofollow" href="/blog/how-to-integrate-java-sdks-into-android-applications/">How to Integrate Java SDKs into Android Applications?</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Top API Specification Trends: 2019-2022</title>
		<link>/blog/top-api-specification-trends-2019-2022/</link>
		
		<dc:creator><![CDATA[Faria Rehman]]></dc:creator>
		<pubDate>Tue, 15 Mar 2022 13:00:30 +0000</pubDate>
				<category><![CDATA[API Blueprint]]></category>
		<category><![CDATA[API Transformer]]></category>
		<category><![CDATA[OpenAPI]]></category>
		<category><![CDATA[Postman]]></category>
		<category><![CDATA[REST APIs]]></category>
		<category><![CDATA[SOAP]]></category>
		<category><![CDATA[OpenApi]]></category>
		<category><![CDATA[Rest API]]></category>
		<category><![CDATA[Soap]]></category>
		<category><![CDATA[Trends]]></category>
		<guid isPermaLink="false">https://apimatic.io/blog/?p=1775</guid>

					<description><![CDATA[<p>Unsurprisingly, the pandemic-ridden era has fueled the rise of APIs in the world. What is more interesting, however, is that with the rise of APIs, a rise in the number of API specification documents has been observed as well. It leads us to believe that more people are adapting to the design-first approach for building [&#8230;]</p>
<p>The post <a rel="nofollow" href="/blog/top-api-specification-trends-2019-2022/">Top API Specification Trends: 2019-2022</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></description>
										<content:encoded><![CDATA[<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p class=""><img class="aligncenter wp-image-1844 " src="/wp-content/uploads/2022/04/Top-API-Specification-Trends-01-1024x498.png" alt="" width="726" height="353"></p>
<p class=""><span style="font-weight: 400;">Unsurprisingly, the pandemic-ridden era has fueled the rise of APIs in the world. What is more interesting, however, is that with the rise of APIs, a rise in the number of API specification documents has been observed as well. It leads us to believe that more people are adapting to the design-first approach for building APIs, resulting in intriguing API specification trends.</span></p>
<p class=""><img class="aligncenter wp-image-1786 " src="/wp-content/uploads/2022/04/Yearly-API-Spec-Rise-1024x606.png" alt="" width="631" height="374"></p>
<p class=""><span style="font-weight: 400;">An API specification document is a machine-readable description of an API or service that describes its endpoints, data models, and other related information. In case you are wondering why you need an API description document in the first place, that is an entirely different topic that I have discussed in the blog </span><a href="https://www.apimatic.io/blog/2017/04/why-your-api-needs-machine-readable-description-832e805f6855/"><span style="font-weight: 400;">Why Your API Needs Machine-Readable Description</span></a><span style="font-weight: 400;">.</span></p>
<p class=""><span style="font-weight: 400;">This blog sheds some light on the top API specification trends observed over the past 3 years. You can expect data around which API specification formats were most popular, ones that seem to be emerging over time, and those that are showing signs of imminent death. The trends are based on data collected from APIs imported or transformed by unique users on APIMatic.</span></p>
<h2 class=""><span style="font-weight: 400;">Postman Collections &#8211; Most Popular Input</span></h2>
<p class=""><span style="font-weight: 400;">In the last 3 years, nearly 30,000 users brought only Postman Collections as input into APIMatic either to transform their API specifications to some other format or to generate SDKs/Developer portals. The second-largest number of input API specifications were mainly OpenAPI files.</span></p>
<p class=""><img class="aligncenter wp-image-1778 " src="/wp-content/uploads/2022/04/Imports-1024x620.png" alt="" width="766" height="464"></p>
<p class=""><span style="font-weight: 400;">Many developers test their APIs on Postman which makes it their first choice to store all API-related information. As a next step, if they want to set up a developer experience (DX) platform for their end-users with API documentation and SDKs, it is easier for them to export their stored API information in the form of Postman Collections and use them to generate the required DX kits. This explains the big number of users bringing in Postman Collections as input into APIMatic as well.&nbsp;</span></p>
<p class=""><span style="font-weight: 400;">However, the Postman Collection files are structured around making API calls and lack a proper type system to define data more precisely. This makes it a slightly tricky format to deal with when generating good quality SDKs and language-specific documentation, however, you can tackle those issues by following this detailed blog on </span><a href="https://www.apimatic.io/blog/2021/04/curating-postman-collections-to-generate-quality-api-documentation-sdks/"><span style="font-weight: 400;">How to Generate Quality API Documentation &amp; SDKs from Your Postman Collections</span></a><span style="font-weight: 400;">.</span></p>
<h2 class=""><span style="font-weight: 400;">The Rise and Fall of API Specification Formats&nbsp;</span></h2>
<p class=""><span style="font-weight: 400;">In just 3 years, some popular formats have lost some of their fame while others have risen to take the throne.&nbsp;</span></p>
<p class=""><img class="aligncenter wp-image-1777 " src="/wp-content/uploads/2022/04/Emerging-Formats-2-1024x612.png" alt="" width="731" height="437"></p>
<h3 class=""><strong>Insomnia &#8211; An Emerging Format</strong></h3>
<p class=""><span style="font-weight: 400;">Soon after </span><a href="https://konghq.com/blog/kong-acquires-insomnia/"><span style="font-weight: 400;">Kong acquired Insomnia</span></a><span style="font-weight: 400;"> at the end of 2019, the Insomnia specification imports nearly quadrupled in APIMatic. Being quite a newer format, the imports remained quite low as compared to Postman Collections (it being the closest alternative to Insomnia). However, its usage has been increasing steadily ever since.</span></p>
<p class=""><img class="aligncenter wp-image-1779 " src="/wp-content/uploads/2022/04/Insomnia-Growth-1024x603.png" alt="" width="714" height="421"></p>
<h3 class=""><strong>OpenAPI v3.0 Imports Have (Finally) Overtaken v2.0</strong></h3>
<p class=""><span style="font-weight: 400;">Contrary to the API Specifications statistics of </span><a href="https://www.postman.com/state-of-api/api-technologies/"><span style="font-weight: 400;">Postman 2021 State of the API Report</span></a><span style="font-weight: 400;">, APIMatic saw an increase in the number of imports of the newer OpenAPI version v3.0 as compared to v2.0.</span></p>
<p class=""><img class="aligncenter wp-image-1782 " src="/wp-content/uploads/2022/04/OpenAPI-3-vs-OpenAPI-2-1024x608.png" alt="" width="683" height="405"></p>
<p class=""><span style="font-weight: 400;">As can be seen from the graph above, around the start of 2019, the OpenAPI v3.0 imports were initially less than those of v2.0 (also known as Swagger v2.0). Then, they stayed nearly equal for around four months and eventually rose well above them after August 2019. Meanwhile, the imports of v2.0 slowly declined and are expected to continue their downward trend as more and more people adapt to the newer version.&nbsp;</span></p>
<h3 class=""><strong>OpenAPI v3.1 &#8211; Still in Infancy</strong></h3>
<p class=""><span style="font-weight: 400;">OpenAPI announced its release of the newer version v3.1 in early February 2021 with APIMatic </span><a href="https://docs.apimatic.io/changelog/support-added-for-openapi31/"><span style="font-weight: 400;">releasing support</span></a><span style="font-weight: 400;"> for it in late September.&nbsp;</span></p>
<p class=""><img class="aligncenter wp-image-1783 " src="/wp-content/uploads/2022/04/OpenAPI-3.1-vs-OpenAPI-3.0-Monthly-1024x609.png" alt="" width="688" height="409"><br />
<span style="font-weight: 400;">As was obvious in the case of OpenAPI v3.0 vs v2.0 adoption rates, it takes time for tools and the end-users to adapt to newer versions of specifications. There are still tools out there that continue supporting v2.0 and have yet to add support for OpenAPI v3.0. Even when tools do eventually start supporting a new version, it takes more time for end-users to migrate their existing specifications to it and even more time until they start utilizing the newer features fully.&nbsp;</span></p>
<p class=""><span style="font-weight: 400;">Therefore, we expect the OpenAPI v3.1 usage to remain quite low for some time. However, with full support for JSON schema and other shiny features, the adoption will open up interesting new possibilities in the future for tools and platforms alike.&nbsp;</span></p>
<p class=""><span style="font-weight: 400;">To learn more about APIMatic’s support for OpenAPI v3.1, check out the blog on </span><a href="https://www.apimatic.io/blog/2021/09/migrating-to-and-from-openapi-3-1/"><span style="font-weight: 400;">OpenAPI 3.1 – What’s New, and How to Migrate to/from Other API Specs?</span></a></p>
<h3 class=""><strong>RAML, API Blueprint, WADL are Fading</strong></h3>
<p class=""><img class="aligncenter wp-image-1776 " src="/wp-content/uploads/2022/04/API-Blueprint-WADL-and-RAML-Declining-Imports-1024x606.png" alt="API Blueprint WADL and RAML Declining Imports" width="721" height="427"></p>
<p><span style="font-weight: 400;">In articles that talk about API specifications for REST APIs, OpenAPI/Swagger is usually mentioned the most. However, often you’ll notice API Blueprint, RAML and WADL listed as alternatives as well. All three have been around for quite some time now:</span></p>
<ul class="">
<li style="font-weight: 400;"><span style="font-weight: 400;">RAML’s latest version (v1.0) was released in 2016. It is the primary format used in the Mulesoft Anypoint platform.&nbsp;</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">API Blueprint is the primary format used in the Apiary platform (acquired by Oracle) and was published around 2013.&nbsp;</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">SoapUI users may be familiar with WADL as well, which is a format as old as 2009.&nbsp;</span></li>
</ul>
<div class="row bg-editor-hr-wrap">
<div class="col-md-12 col-xs-12 col-sm-12">
<hr>
</div>
</div>
<p class=""><strong>RAML or OpenAPI on Anypoint Platform &#8211; Now a Choice</strong></p>
<p class=""><span style="font-weight: 400;">RAML v1.0 offers nearly all of the features offered by OpenAPI v3.0. However, while Mulesoft </span><a href="https://blogs.mulesoft.com/dev-guides/open-api-raml-better-together/"><span style="font-weight: 400;">claims that RAML helps you add modularity</span></a><span style="font-weight: 400;"> to your API specification documents, its prime goal is helping define APIs and not modeling API specifications. Mulesoft, therefore, urges users to make use of both OpenAPI and RAML to achieve their goals.&nbsp;</span></p>
<p class=""><span style="font-weight: 400;">The trends of the past 3 years talk a little differently and seem to indicate that RAML is slowly losing popularity. RAML may remain a choice for Anypoint users, especially those managing APIs completely on their platform. However, the number of such users seems to be largely decreasing over time as Anypoint itself started </span><a href="https://docs.mulesoft.com/release-notes/platform/oas3"><span style="font-weight: 400;">offering support for OpenAPI v3.0 in 2021</span></a><span style="font-weight: 400;">, and more API management platforms with support for OpenAPI are emerging as well.&nbsp;</span></p>
<p class=""><strong>API Blueprint &#8211; No Longer Actively Maintained</strong></p>
<p class=""><span style="font-weight: 400;">Thanks to Markdown, API Blueprint provided a way to write an API specification document that is more human-friendly. However, the downside of this is a compromise on its ability to be machine-readable. It also lacks some of the advanced features offered by OpenAPI.</span></p>
<p class=""><span style="font-weight: 400;">Interestingly though, API Blueprint is no longer actively maintained since 2019. This may be attributed to Apiary</span><a href="https://blog.apiary.io/OAS-3"><span style="font-weight: 400;"> announcing </span></a><span style="font-weight: 400;">experimental support for OpenAPI v3.0 in early 2019 and can explain why, since then, we are seeing a downward trend in the usage of API Blueprint.&nbsp;&nbsp;</span></p>
<p><strong>WADL &#8211; Best Suited for XML APIs</strong></p>
<p class=""><span style="font-weight: 400;">WADL is an XML-based format for services that work over HTTP. With an increase in REST APIs, JSON has become the most common data exchange format which is best defined using JSON schemas that RAML and OpenAPI support, whereas WADL offers support for only XML schemas.</span></p>
<p class=""><span style="font-weight: 400;">APIs that exchange XML may still benefit from WADL, though based on the trends the number of such APIs seem to be decreasing over time which likely explains the decline in the usage of WADL as well.</span></p>
<h2 class=""><span style="font-weight: 400;">API Specification Transformation Trends</span></h2>
<p class=""><span style="font-weight: 400;">APIMatic offers </span><a href="https://www.apimatic.io/transformer/"><span style="font-weight: 400;">API Transformer</span></a><span style="font-weight: 400;"> as a free tool to help you transform from one API specification format to another. We support all popular formats including OpenAPI, Postman Collections, RAML, and more.&nbsp;</span></p>
<p class=""><span style="font-weight: 400;">I’ll share some interesting trends observed in the API Transformer usage in the 2019-2022 time period. Previously, we conducted similar insights for API Transformer for the years 2017 and 2018. If you are interested, you can check them out here:</span></p>
<ul class="">
<li style="font-weight: 400;"><a href="https://www.apimatic.io/blog/2019/04/api-transformer-insights-2018/"><span style="font-weight: 400;">API Transformer Insights 2018</span></a><span style="font-weight: 400;">&nbsp;</span></li>
<li style="font-weight: 400;"><a href="https://www.apimatic.io/blog/2018/04/a-year-with-api-transformer/"><span style="font-weight: 400;">API Transformer Insights 2017</span></a></li>
</ul>
<div class="row bg-editor-hr-wrap">
<div class="col-md-12 col-xs-12 col-sm-12">
<hr>
</div>
</div>
<h3 class=""><strong>OpenAPI/Swagger v2.0 &#8211; Most Exported Format</strong></h3>
<p class=""><span style="font-weight: 400;">As discussed earlier, the number of OpenAPI v3.0 imports surpassed OpenAPI v2.0 imports in the past 3 years. However, quite surprisingly, the number of OpenAPI v2.0 exports remained quite high as ever, or perhaps more than before. This at least supported the Postman 2021 State of the API Report and my shock was nearly on the same levels as the </span><a href="https://apihandyman.io/we-need-to-talk-openapi-3-is-4-years-old-but-swagger-2-is-still-predominant/"><span style="font-weight: 400;">API Handyman</span></a><span style="font-weight: 400;">.</span></p>
<p class=""><img class="aligncenter wp-image-1781 " src="/wp-content/uploads/2022/04/Most-Exports-1024x611.png" alt="" width="785" height="468"></p>
<p class=""><span style="font-weight: 400;">If you head over to the </span><a href="https://openapi.tools/"><span style="font-weight: 400;">list of popular OpenAPI tools</span></a><span style="font-weight: 400;">, you’ll notice that almost all tools now support OpenAPI v3.0 and there are a large number of tools that don’t even support OpenAPI v2.0 anymore. So, why are people preferring to convert their API specifications to OpenAPI v2.0? Some people are even downgrading from OpenAPI v3.0 to v2.0 (more on that later).&nbsp;</span></p>
<p class=""><span style="font-weight: 400;">While the exact reason is not entirely clear, the apparent reason revolves around the quality of support for OpenAPI v3.0 in tools. OpenAPI v2.0 has been around for much longer than OpenAPI v3.0 so though tools claim to support OpenAPI v3.0 their support for OpenAPI v2.0 may be much more stable and dependable. It is also possible that people are using legacy tools that still only support OpenAPI v2.0.</span></p>
<h3><strong>Top API Specification Transformation Use-Cases</strong></h3>
<p class=""><span style="font-weight: 400;">Over the past three years, some interesting use-cases surrounding API specification transformations have emerged.</span></p>
<p class=""><img class="aligncenter wp-image-1785 " src="/wp-content/uploads/2022/04/Transformation-Use-Cases-1024x615.png" alt="" width="824" height="495"></p>
<p class=""><strong>Postman to OpenAPI</strong></p>
<p class=""><a href="https://learning.postman.com/docs/integrations/available-integrations/apimatic"><span style="font-weight: 400;">Postman&#8217;s APIMatic integration</span></a><span style="font-weight: 400;"> offers its Pro users the ability to convert Postman Collections to any format of their choice. A large number of transformations from Postman Collections can be attributed to that. Nearly 40% of transformations saw users trying to convert their Postman Collection files to OpenAPI.&nbsp;</span></p>
<p class=""><span style="font-weight: 400;">As far as the conversion to OpenAPI is concerned, it opens up a large set of tools for Postman users from where they can generate output varying from simple API documentation to feature-packed API developer experience portals with SDKs, live code samples, etc. In other words, converting to OpenAPI helps them manage their APIs better during the later stages of the API lifecycle (e.g. API consumption).</span></p>
<p><strong>OpenAPI v3 to OpenAPI/Swagger v2</strong></p>
<p class=""><span style="font-weight: 400;">15% of the transformations show that users who are already using the newer OpenAPI v3 versions feel the need to downgrade back to the older versions, particularly to OpenAPI v2.0. The only plausible reason seems to be the lack of proper support for OpenAPI v3.0 in tooling that they are looking to use.</span></p>
<p><strong>SOAP to REST</strong></p>
<p class=""><span style="font-weight: 400;">With more benefits, an increasing number of users are looking to migrate their legacy APIs to REST. While the migration is not a single step process, since every SOAP API is accompanied by a WSDL specification/contract, conversion of WSDL to a REST-supporting format (e.g OpenAPI, RAML, etc.) can serve as a starting point. It can give an idea of what the final API can look like.&nbsp;</span></p>
<p class=""><span style="font-weight: 400;">In APIMatic, API Transformer offers the </span><a href="https://www.apimatic.io/blog/2018/12/api-transformer-recipes-facilitating-migration-from-soap-to-rest/"><span style="font-weight: 400;">SOAP to REST conversion</span></a><span style="font-weight: 400;">, to its users. Based on the data collected, 8% of the transformations performed by unique users converted their WSDL files to an API specification that supported only REST APIs (e.g. OpenAPI, RAML, WADL, API Blueprint, etc.) in the past three years.</span></p>
<p><strong>Insomnia to Postman</strong></p>
<p class=""><span style="font-weight: 400;">With the increase in Insomnia specification imports, an increase in the number of transformations from Insomnia to Postman Collections has also been observed, constituting about 4% of the total transformations performed by unique users.&nbsp;</span></p>
<p class=""><span style="font-weight: 400;">Insomnia is the closest alternative to Postman, offering very similar features. However, Postman has been around for quite some time now and hosts a large user base whereas Insomnia is relatively newer. The need to convert between the two formats likely boils down to varying ease of use of both tools as well as personal preference. If, within a single team of your API program you have members who prefer Postman while others prefer Insomnia, then, to ensure smooth collaboration between these members, conversion between the two formats can present itself as a necessary step.</span></p>
<h2 class=""><span style="font-weight: 400;">Invalid API Specifications</span></h2>
<p class=""><span style="font-weight: 400;">Not all the inputs we receive in APIMatic are valid API specification documents. A small portion of them have a few common mistakes or violate the standards one way or another.</span></p>
<h3 class=""><strong>Comparing Success vs Failure Ratio</strong></h3>
<p class=""><img class="aligncenter wp-image-1784 " src="/wp-content/uploads/2022/04/Success-vs-Failure-Ratio-1024x609.png" alt="" width="811" height="482"></p>
<p class=""><span style="font-weight: 400;">Looking at the API specification trends, it is interesting to note that API specification documents that have some form of manual intervention involved showed a greater tendency to be invalid (e.g. RAML, OpenAPI) as compared to API specification documents that are compiled and generated purely by tools (e.g. Postman Collections, Insomnia).&nbsp;</span></p>
<p class=""><span style="font-weight: 400;">Out of the total RAML files received by APIMatic in the last three years, nearly 38% had some form of issue. This is in sharp contrast to Postman Collections where out of the total files we received, only 0.99% were invalid.</span></p>
<h3 class=""><strong>Common Causes of Invalidity</strong></h3>
<p class=""><img class="aligncenter wp-image-1780 " src="/wp-content/uploads/2022/04/Invalidity-1024x611.png" alt="" width="715" height="427"></p>
<p class=""><span style="font-weight: 400;">The causes of invalidity vary greatly depending on the format, however, some of the most common ones are listed below:</span></p>
<ol class="">
<li style="font-weight: 400;"><b>Unresolvable references</b><span style="font-weight: 400;"> are the topmost reason for failures. API specifications have different ways to reference other components within the same file or externally. An unresolvable reference is one where the component being referenced either does not exist or exists with a different name or the path to the component is invalid.</span></li>
<li style="font-weight: 400;"><b>Syntax issues</b><span style="font-weight: 400;"> are the second most common reason for failures. A trailing comma in JSON, bad indentation in YAML, or unclosed tag in XML are all examples of invalid syntax.</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">Often users have specifications where</span><b> types of components do not match</b><span style="font-weight: 400;"> the expected type set by the standards e.g. RAML v1.0 standard sets the type of property </span><code>scopes</code><span style="font-weight: 400;">&nbsp;as a “list” of strings yet plenty of developers declare it as a simple string.</span></li>
</ol>
<p class="">
<p class=""><span style="font-weight: 400;">If you often run into issues like the above, I recommend going through this series of blogs on how to avoid:</span></p>
<ul class="">
<li style="font-weight: 400;"><a href="https://apimatic.io/blog/2018/03/common-mistakes-developers-make-in-their-openapi-3-files/"><span style="font-weight: 400;">Common mistakes developers make in their OpenAPI v3 files</span></a></li>
<li style="font-weight: 400;"><a href="https://apimatic.io/blog/2018/04/common-mistakes-developers-make-in-their-raml-files/"><span style="font-weight: 400;">Common mistakes developers make in their RAML files</span></a></li>
<li style="font-weight: 400;"><a href="https://apimatic.io/blog/2018/09/common-mistakes-developers-make-in-their-api-blueprint-files/"><span style="font-weight: 400;">Common mistakes developers make in their API Blueprint files</span></a></li>
</ul>
<p class="">
<p class=""><span style="font-weight: 400;">In case that doesn’t help, feel free to try some of our </span><a href="https://docs.apimatic.io/api-transformer/transformer-faqs/#troubleshooting"><span style="font-weight: 400;">troubleshooting tips and FAQs</span></a><span style="font-weight: 400;">.&nbsp;</span></p>
<h2 class=""><span style="font-weight: 400;">Conclusion</span></h2>
<p class=""><span style="font-weight: 400;">Recent API specification trends show a mass convergence of the API community towards accepting OpenAPI as the standard for describing REST API services. Postman is expected to continue complementing OpenAPI with its API testing features though it might face some competition from Insomnia in the longer run.&nbsp;</span></p>
<p class=""><span style="font-weight: 400;">While new API technologies are emerging like GraphQL, GRPC, and more, REST remains the most popular, with legacy APIs trying to catch up. These trends are expected to play a key role in the evolution of API specifications in 2022 and beyond.&nbsp;</span></p>
</div>
</div>
</div>
</div>
<p>The post <a rel="nofollow" href="/blog/top-api-specification-trends-2019-2022/">Top API Specification Trends: 2019-2022</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>APIMatic Goes Back to Normal with a Bang</title>
		<link>/blog/apimatic-goes-back-to-normal-with-a-bang/</link>
		
		<dc:creator><![CDATA[Arooj Arshad]]></dc:creator>
		<pubDate>Mon, 14 Mar 2022 10:39:27 +0000</pubDate>
				<category><![CDATA[APIMATIC]]></category>
		<category><![CDATA[API Meetup]]></category>
		<category><![CDATA[Apimatic]]></category>
		<category><![CDATA[APIMatic events]]></category>
		<guid isPermaLink="false">https://apimatic.io/blog/?p=1718</guid>

					<description><![CDATA[<p>About 2 years ago, our lives changed overnight as the Covid-19 pandemic gripped the world. Now, as nearly everyone has received their vaccination shots, life has started to regain some normalcy. Schools have re-opened, meals can be enjoyed together and companies are slowly seeing employees back in the office. At APIMatic, we had moved to [&#8230;]</p>
<p>The post <a rel="nofollow" href="/blog/apimatic-goes-back-to-normal-with-a-bang/">APIMatic Goes Back to Normal with a Bang</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></description>
										<content:encoded><![CDATA[<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p class="">
<p class=""><img class="aligncenter wp-image-1722 " src="/wp-content/uploads/2022/04/1_image_7-scaled-e1647870397245-1024x524.jpg" alt="" width="693" height="354"></p>
<p class=""><span style="font-weight: 400;">About 2 years ago, our lives changed overnight as the Covid-19 pandemic gripped the world. Now, as nearly everyone has received their vaccination shots, life has started to regain some normalcy. Schools have re-opened, meals can be enjoyed together and companies are slowly seeing employees back in the office.</span></p>
<p class=""><span style="font-weight: 400;">At APIMatic, we had moved to a complete work-from-home environment since 2020, but that did not stop us from getting to know one another and having fun. Therefore, we decided that 2022 should be the year for a “normal life”, full of colors and lively activities for our team. Hence, we called a heads-up to reevaluate our goals and set boundaries to maintain priorities.&nbsp;</span></p>
<p class=""><span style="font-weight: 400;">This year, for our 6th anniversary, we agreed to bring our whole team together to relish some quality time, watch each other laugh and open up the old memories that were closed in a box since the pandemic. As a result, we celebrated going back to normal with a two-day event during the first week of March.</span></p>
<p><iframe title="6th Anniversary of APIMatic (Pakistan Office)" width="653" height="367" src="https://www.youtube.com/embed/ILB5Fp2SNaA?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></p>
<h2 class=""><b>Team Celebrating APIMatic’s 6th Anniversary</b><span style="font-weight: 400;">&nbsp;</span></h2>
<p class="">The main anniversary event was held within the office premises. To warm up the audience and boost their morale, the celebration started with our founder, Adeel, giving a speech on the visions and future plans of the company.</p>
<p class=""><img class="alignnone wp-image-1759" src="/wp-content/uploads/2022/04/image_8.png" alt="" width="140" height="201"> <img class="alignnone wp-image-1755" src="/wp-content/uploads/2022/04/P0A9769.png" alt="" width="218" height="200"> <img class="alignnone wp-image-1764" src="/wp-content/uploads/2022/04/P0A9789-scaled.jpg" alt="" width="157" height="200"> <img class="alignnone wp-image-1765" src="/wp-content/uploads/2022/04/P0A9806.jpg" alt="" width="135" height="199"> <img class="alignnone wp-image-1767" src="/wp-content/uploads/2022/04/P0A9820.jpg" alt="" width="156" height="198"></p>
<p class=""><span style="font-weight: 400;">Following that, each of the team leads gave their foresight and plans for growth. Since everyone was meeting up after a long time post-pandemic, we wanted all the teams to know one another and give them a fair share of appreciation.&nbsp;</span></p>
<p class=""><img class="wp-image-1720 alignnone" src="/wp-content/uploads/2022/04/image_2.jpg" alt="" width="411" height="274"> &nbsp;<img class="alignnone wp-image-1733" src="/wp-content/uploads/2022/04/P0A9834-scaled.jpg" alt="" width="408" height="272"></p>
<p class=""><span style="font-weight: 400;">Next followed the award ceremony where formal awards along with equity awards and prizes were presented to the outstanding performers throughout the whole year after having thorough nominations.</span></p>
<p class=""><img class="alignnone wp-image-1735" src="/wp-content/uploads/2022/04/P0A9873-scaled.jpg" alt="" width="267" height="178"> <img class="alignnone wp-image-1736" src="/wp-content/uploads/2022/04/P0A9880-scaled.jpg" alt="" width="267" height="178"> <img class="alignnone wp-image-1737" src="/wp-content/uploads/2022/04/P0A9891-scaled.jpg" alt="" width="268" height="179"></p>
<p class=""><img class="alignnone wp-image-1738" src="/wp-content/uploads/2022/04/P0A9906-scaled.jpg" alt="" width="269" height="179"> <img class="alignnone wp-image-1739" src="/wp-content/uploads/2022/04/P0A9909-scaled.jpg" alt="" width="270" height="180">&nbsp;<img class="alignnone wp-image-1740" src="/wp-content/uploads/2022/04/P0A9876-scaled.jpg" alt="" width="263" height="175"></p>
<p class=""><img class="alignnone wp-image-1741" src="/wp-content/uploads/2022/04/P0A9877-scaled.jpg" alt="" width="272" height="181"> <img class="alignnone wp-image-1742" src="/wp-content/uploads/2022/04/P0A9894-scaled.jpg" alt="" width="270" height="180"> <img class="alignnone wp-image-1768" src="/wp-content/uploads/2022/04/P0A9867-scaled.jpg" alt="" width="271" height="180"> <img class="alignnone wp-image-1820" src="/wp-content/uploads/2022/04/P0A9887-scaled.jpg" alt="" width="272" height="182"> &nbsp; <img class="alignnone wp-image-1821" src="/wp-content/uploads/2022/04/P0A9903-scaled.jpg" alt="" width="271" height="181"> &nbsp;<img class="alignnone wp-image-1822" src="/wp-content/uploads/2022/04/P0A9912-scaled.jpg" alt="" width="272" height="182"></p>
<p class=""><span style="font-weight: 400;">Following that, APIMatic customized shirts, bottles, and flavored chocolates were distributed to the whole team. The celebration concluded with delicious refreshments and cake to make the day a whole more enjoyable.&nbsp;&nbsp;&nbsp;</span></p>
<p class=""><img class="alignnone wp-image-1823" src="/wp-content/uploads/2022/04/P0A9920-scaled.jpg" alt="" width="270" height="179">&nbsp; &nbsp; <img class="alignnone wp-image-1825" src="/wp-content/uploads/2022/04/P0A9925-scaled.jpg" alt="" width="273" height="182"> &nbsp; <img class="alignnone wp-image-1824" src="/wp-content/uploads/2022/04/P0A9922-scaled.jpg" alt="" width="275" height="183"> <img class="alignnone wp-image-1826" src="/wp-content/uploads/2022/04/P0A9962-scaled.jpg" alt="" width="275" height="184"> <img class="alignnone wp-image-1827" src="/wp-content/uploads/2022/04/P0A9969-scaled.jpg" alt="" width="276" height="184"> <img class="alignnone wp-image-1828" src="/wp-content/uploads/2022/04/P0A9974-scaled.jpg" alt="" width="275" height="184"></p>
<h2 class=""><b>Adventure Trip to Mabali Island</b></h2>
<p class=""><span style="font-weight: 400;">To add to the celebration week, the APIMatic team went for an ecological, nature-friendly, and fun-filled visit to Mabali Island (It&#8217;s not an island, it&#8217;s a way of life). The day started with everybody arriving at the office and leaving around 9 am. The route, to a relief, was roughly an hour and a half. Along the way, everybody enjoyed playing games by splitting themselves into two teams and laughing to their heart&#8217;s content.&nbsp;</span></p>
<p class=""><span style="font-weight: 400;">Around reaching the island at 10.30 am, the weather was a lot sunny and dry. Welcome drinks were served which was everyone&#8217;s favorite, the mint margarita. For the day&#8217;s first activity, everyone opted for jet skis, splitting themselves into four teams and conducting races on the water. After that, took place the great tug of war. Our HR managers team won, exhilarating their strength!</span></p>
<p class=""><img class="wp-image-1723 alignnone" src="/wp-content/uploads/2022/04/image_4.jpg" alt="" width="338" height="253">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<img class="alignnone wp-image-1743" src="/wp-content/uploads/2022/04/image_9.jpg" alt="" width="448" height="252"></p>
<p class=""><span style="font-weight: 400;">To continue with all the fun, some of the team members started a volleyball match, others went for a paddleboat, and the rest chose to relax while enjoying the pretty view. With the eventual improvement in weather to become cloudy and more pleasant, most of the men went to play their most-liked game, cricket, while the others hopped on a family boat that cruises around the mesmerizing lake.</span></p>
<p class=""><img class="wp-image-1724 alignnone" src="/wp-content/uploads/2022/04/image_5.jpg" alt="" width="421" height="237">&nbsp; &nbsp; &nbsp;<img class="wp-image-1791 size-medium alignnone" src="/wp-content/uploads/2022/04/image_13-300x225.jpg" alt="" width="300" height="225"></p>
<p class=""><span style="font-weight: 400;">Giving the day another boost, a group of people decided to go parasailing to take in the breathtaking views of the sky and the lake. Our CEO, Adeel Ali, also went for Ziplining. To conclude the day and rest up a little bit, everybody enjoyed a scrumptious BBQ platter meal for lunch. Following that, the whole team gathered to have tea against the lake and ended the day while winding down.&nbsp;</span></p>
<p class=""><img class="alignnone wp-image-1725" src="/wp-content/uploads/2022/04/image_6.jpg" alt="" width="406" height="228">&nbsp;<img class="wp-image-1746 alignnone" src="/wp-content/uploads/2022/04/image_12.jpg" alt="" width="404" height="227"></p>
<h2 class=""><b>Scrumptious Lunch at Whispering Pines Resort</b></h2>
<p class=""><span style="font-weight: 400;">The celebrations ended with team APIMatic having a delightful lunch at Whispering Pines resort situated among the panoramic green views, in the heart of Margalla Hills. It is an hour&#8217;s drive from Islamabad and a beautiful place for adventure and nature lovers.</span></p>
<p><iframe title="Whispering Pines, #Islamabad, #APIMatic Lunch, 17-3-22" width="653" height="367" src="https://www.youtube.com/embed/GYGLV_SXp60?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></p>
<p class=""><span style="font-weight: 400;">The day started with almost the whole team working from the office, where Adeel gave an informative session on the development of APIs in the tech world. Following that, everyone left for a BBQ lunch along with desserts and tea at the Whispering Pines resort to enjoy the astounding views of nature. Two of the team members even attended customer calls from the resort, showing phenomenal team spirit. At last, we ended the evening by enjoying ourselves to live music as some hidden talents were discovered in the form of guitarists and singers from within the team.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>
<p class=""><img class="alignnone wp-image-1835" src="/wp-content/uploads/2022/04/IMG_20220317_133658-scaled.jpg" alt="" width="251" height="188"> &nbsp;<img class="alignnone wp-image-1830" src="/wp-content/uploads/2022/04/IMG_20220317_174904-scaled.jpg" alt="" width="327" height="184"> &nbsp;<img class="alignnone wp-image-1833" src="/wp-content/uploads/2022/04/IMG_20220317_161102-scaled.jpg" alt="" width="238" height="178"> &nbsp; <img class="wp-image-1841 alignnone" src="/wp-content/uploads/2022/04/Image-from-iOS-scaled-e1647869658754.jpg" alt="" width="311" height="173"> &nbsp;<img class="alignnone wp-image-1836 " src="/wp-content/uploads/2022/04/20220317_155945-300x142.jpg" alt="" width="317" height="150"> &nbsp;<img class="alignnone  wp-image-1829" src="/wp-content/uploads/2022/04/IMG_20220317_174449-scaled.jpg" alt="" width="199" height="149"> <img class="alignnone  wp-image-1834" src="/wp-content/uploads/2022/04/IMG_20220317_161115-scaled.jpg" alt="" width="280" height="210"> &nbsp; <img class="alignnone  wp-image-1846" src="/wp-content/uploads/2022/04/IMG_20220317_165729-1-scaled.jpg" alt="" width="161" height="215"> &nbsp;<img class="alignnone  wp-image-1831" src="/wp-content/uploads/2022/04/IMG_20220317_181449-scaled-e1647869388602.jpg" alt="" width="376" height="192"></p>
<h2 class=""><b>Wrapping Up!</b></h2>
<p class=""><span style="font-weight: 400;">With last year as a pandemic-stricken remote-working year, our team maintained their spirits during difficult times with steadfast commitment and collaborative culture. All of this was possible due to our team-building efforts and staying strong throughout. We hope the year 2022 brings us all the happiness and better opportunities for our growth!</span></p>
</div>
</div>
</div>
</div>
<p>The post <a rel="nofollow" href="/blog/apimatic-goes-back-to-normal-with-a-bang/">APIMatic Goes Back to Normal with a Bang</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Facilitate On-Premise Deployment with APIMatic Kubernetes Operator</title>
		<link>/blog/facilitate-on-premise-deployment-with-apimatic-kubernetes-operator/</link>
		
		<dc:creator><![CDATA[Arooj Arshad]]></dc:creator>
		<pubDate>Tue, 01 Mar 2022 09:53:43 +0000</pubDate>
				<category><![CDATA[APIMATIC]]></category>
		<category><![CDATA[CodeGen]]></category>
		<category><![CDATA[API]]></category>
		<category><![CDATA[Apimatic Features]]></category>
		<category><![CDATA[Code Generation]]></category>
		<category><![CDATA[Developer Experience]]></category>
		<category><![CDATA[Kubernetes]]></category>
		<guid isPermaLink="false">https://apimatic.io/blog/?p=1688</guid>

					<description><![CDATA[<p>Working in an on-premise production environment containing containerized applications for the APIs requires maintaining and managing all the solutions within it amid strict security and availability requirements. This is the reason why setting up containerized images causes a lot of nuisance. Hence, to enable users to run applications on diverse sets of infrastructures on-premises: the [&#8230;]</p>
<p>The post <a rel="nofollow" href="/blog/facilitate-on-premise-deployment-with-apimatic-kubernetes-operator/">Facilitate On-Premise Deployment with APIMatic Kubernetes Operator</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></description>
										<content:encoded><![CDATA[<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p><figure id="attachment_1691" aria-describedby="caption-attachment-1691" style="width: 712px" class="wp-caption aligncenter"><img class=" wp-image-1691" src="/wp-content/uploads/2022/04/kubernetes-image.png" alt="APIMatic Kubernetes Operator" width="712" height="445"><figcaption id="caption-attachment-1691" class="wp-caption-text">APIMatic Kubernetes Operator</figcaption></figure></p>
<p class=""><span style="font-weight: 400">Working in an on-premise production environment containing containerized applications for the APIs requires maintaining and managing all the solutions within it amid strict security and availability requirements. This is the reason why setting up containerized images causes a lot of nuisance. Hence, to enable users to run applications on diverse sets of infrastructures on-premises: the </span><span style="color: #0000ff"><a style="color: #0000ff" href="https://docs.apimatic.io/kubernetes-operator/apimatic-operator-overview/"><span style="font-weight: 400">Kubernetes Operator</span></a></span><span style="font-weight: 400"> comes to the rescue!</span></p>
<p class=""><span style="color: #0000ff"><a style="color: #0000ff" href="https://docs.apimatic.io/kubernetes-operator/apimatic-operator-overview/"><span style="font-weight: 400">APIMatic Kubernetes Operator</span></a></span><span style="font-weight: 400">, available as a containerized application and solution, makes on-premise deployment a whole lot easier, ensures that APIMatic’s developer experience platform gets simple for the API users, and cuts down the </span><span style="font-weight: 400">setup process to minutes, allowing users to instantly get up and running with APIMatic on their own infrastructure.</span><span style="font-weight: 400">&nbsp; &nbsp;&nbsp;</span></p>
<p class=""><span style="font-weight: 400">The APIMatic Kubernetes Operator offers the following features:</span></p>
<ul class="">
<li style="font-weight: 400"><span style="font-weight: 400">Deploying APIMatic CodeGen Web API service within the Kubernetes or OpenShift cluster.</span></li>
<li style="font-weight: 400"><span style="font-weight: 400">Exposing the APIMatic CodeGen API external to the cluster.</span></li>
<li style="font-weight: 400"><span style="font-weight: 400">Exposing the service through an ingress resource.</span></li>
<li style="font-weight: 400"><span style="font-weight: 400">Manual horizontal scaling of pods.</span></li>
</ul>
<p class="">&nbsp;</p>
<p><figure id="attachment_1694" aria-describedby="caption-attachment-1694" style="width: 734px" class="wp-caption aligncenter"><img class=" wp-image-1694" src="/wp-content/uploads/2022/04/Apimatic-Kubernetes-Diagram.png" alt="" width="734" height="402"><figcaption id="caption-attachment-1694" class="wp-caption-text">&nbsp;How the APIMatic Kubernetes Operator works?</figcaption></figure></p>
<p class=""><span style="font-weight: 400">In this blog, we will take a dive into how the APIMatic Kubernetes Operator actually runs along with the methods to deploy it within the APIMatic environment.</span></p>
<h2><span style="font-weight: 400">Running the APIMatic Kubernetes Operator</span></h2>
<p class=""><span style="font-weight: 400">For running the APIMatic Kubernetes operator, you need to go through some steps and requirements. First of all, contact APIMatic at </span><b>support@apimatic.io</b><span style="font-weight: 400"> to register with the APIMatic CodeGen Docker Hub registry and acquire a valid license to run the APIMatic CodeGen API. Moreover, you need to install:</span></p>
<ol class="">
<li style="font-weight: 400"><a href="https://golang.org/"><span style="font-weight: 400">Go language</span></a> <span style="font-weight: 400">version v1.16.*</span></li>
<li style="font-weight: 400"><a href="https://git-scm.com/"><span style="font-weight: 400">Git</span></a></li>
<li style="font-weight: 400"><span style="color: #3366ff"><a style="color: #3366ff" href="https://www.gnu.org/software/make/"><span style="font-weight: 400">GNU Make Tool</span></a></span></li>
<li style="font-weight: 400"><span style="color: #3366ff"><a style="color: #3366ff" href="https://sdk.operatorframework.io/docs/overview/"><span style="font-weight: 400">Operator SDK</span></a></span></li>
<li style="font-weight: 400"><span style="font-weight: 400">A running Kubernetes cluster with </span><a href="https://kubernetes.io/docs/reference/kubectl/overview/"><span style="font-weight: 400">kubectl</span></a><span style="font-weight: 400"> on the client.&nbsp;</span></li>
<li style="font-weight: 400"><a href="https://minikube.sigs.k8s.io/docs/"><span style="font-weight: 400">Minikube</span></a><span style="font-weight: 400"> or </span><a href="https://minikube.sigs.k8s.io/docs/"><span style="font-weight: 400">kind</span></a><span style="font-weight: 400">, for testing purposes.</span></li>
<li style="font-weight: 400"><a href="https://metallb.org/"><span style="font-weight: 400">MetalLB</span></a><span style="font-weight: 400">, for checking the service created by the APIMatic operator on-premises.</span></li>
</ol>
<h2 class=""><span style="font-weight: 400">How to Deploy the Kubernetes Operator?</span></h2>
<p class=""><span style="font-weight: 400">Once the initial requirements are complete, you can proceed to deploy the APIMatic Kubernetes operator via the methods:</span></p>
<ul class="">
<li style="font-weight: 400"><span style="font-weight: 400">Direct Deployment of Operator</span></li>
<li style="font-weight: 400"><span style="font-weight: 400">OLM Deployment of Operator (will be covered in our next blog soon&#8230;)</span></li>
</ul>
<h3 class=""><span style="font-weight: 400">Direct Deployment of Operator</span></h3>
<p class=""><span style="font-weight: 400">Direct deployment is an instant deployment to those instances that are externally accessible. To run the operator via direct deployment, start off by cloning the APIMatic repository into your working directory using the </span><b>git clone</b><span style="font-weight: 400"> command.&nbsp;&nbsp;</span></p>
<pre><code class="language-bash">git clone https://github.com/apimatic/apimatic-kubernetes-operator.git</code></pre>
<p class=""><span style="font-weight: 400">Next, run the </span><b>make deploy </b><span style="font-weight: 400">command to set up the APIMatic operator resources. This will deploy the </span><b>apimatic-system</b><span style="font-weight: 400"> namespace as well as the </span><b>CRD</b><span style="font-weight: 400"> and the </span><b>RBAC</b><span style="font-weight: 400"> manifests. Following this, create a secret, named </span><b>apimaticimagesecret, </b><span style="font-weight: 400">with </span><b>kubectl create secret</b><span style="font-weight: 400">&nbsp;command which allows pulling the APIMatic CodeGen image using the Docker Hub username registered with APIMatic.</span></p>
<pre class=""><code class="language-bash">kubectl create secret docker-registry apimaticimagesecret --docker-server=https://index.docker.io/v1/ --
docker-username=&lt;your-name&gt; --docker-password=&lt;your-pword&gt; --docker-email=&lt;your-email&gt;</code></pre>
<p class=""><span style="font-weight: 400">Now, create a </span><a href="https://kubernetes.io/docs/concepts/configuration/configmap/"><span style="font-weight: 400">configmap</span></a> <span style="font-weight: 400">resource named </span><b>apimaticlicense, </b><span style="font-weight: 400">with the </span><b>kubectl create configmap</b><span style="font-weight: 400">&nbsp;command, that will serve as the volume storing the APIMatic license. For example,the following command creates a ConfigMap and deploys it using the </span><i><span style="font-weight: 400">License.lic</span></i><span style="font-weight: 400"> file located at </span><i><span style="font-weight: 400">/usr/local/apimatic/license/</span></i><span style="font-weight: 400">.</span></p>
<pre><code class="language-bash">kubectl create configmap apimaticlicense --from-file /usr/local/apimatic/license/License.lic</code></pre>
<p class=""><span style="font-weight: 400">After running the operator using the following </span><b>kubectl apply</b><span style="font-weight: 400">&nbsp;command, you will see a newly created </span><span style="color: #3366ff"><a style="color: #3366ff" href="https://kubernetes.io/docs/concepts/workloads/controllers/deployment/"><span style="font-weight: 400">Deployment</span></a></span><span style="font-weight: 400"> with a replica count of 3 and </span><span style="color: #3366ff"><a style="color: #3366ff" href="https://kubernetes.io/docs/concepts/services-networking/service/"><span style="font-weight: 400">Service</span></a></span><span style="font-weight: 400"> of type NodePort, both named </span><b>apimatic-sample</b><span style="font-weight: 400">. Accessing </span><i><span style="font-weight: 400">http://localhost:32000/</span></i><span style="font-weight: 400"> from your browser (or using curl from within the Minikube or Kind cluster) will show the APIMatic Titan page.</span></p>
<pre><code class="language-bash">kubectl apply -f config/samples/apicodegen_v1beta1_apimatic.yaml</code></pre>
<p class=""><span style="font-weight: 400">Once done with all the above, you can use the exposed APIMatic CodeGen API to generate API SDKs and Docs using </span><span style="color: #3366ff"><a style="color: #3366ff" href="https://curl.se/"><span style="font-weight: 400">curl</span></a></span><span style="font-weight: 400">, Postman, or your own custom Web application that consumes the APIMatic CodeGen API service. You can also remove the APIMatic resources using the </span><b>make undeploy</b><span style="font-weight: 400">&nbsp;command.</span></p>
<p class=""><span style="font-weight: 400">For detailed information, please visit our </span><span style="color: #3366ff"><a style="color: #3366ff" href="https://docs.apimatic.io/kubernetes-operator/direct-deployment-of-operator/"><span style="font-weight: 400">Direct Deployment APIMatic Docs</span></a></span><span style="font-weight: 400">.&nbsp;</span></p>
<h2 class=""><span style="font-weight: 400">Conclusion</span></h2>
<p class=""><span style="font-weight: 400">Setting up a containerized application may not be difficult for API users but is definitely a workout. This is largely because </span><span style="font-weight: 400">containerization</span><span style="font-weight: 400">, the principle approach that Kubernetes is built upon, is still not nearly as ubiquitous as the classical approach to API design and resource management. Therefore, APIMatic Kubernetes Operator has been introduced as yet another option </span><a href="http://apimatic.io/"><span style="font-weight: 400">amongst our developing toolset</span></a><span style="font-weight: 400"> so that you can get up and running with APIMatic on your own infrastructure.</span></p>
</div>
</div>
</div>
</div>
<p>The post <a rel="nofollow" href="/blog/facilitate-on-premise-deployment-with-apimatic-kubernetes-operator/">Facilitate On-Premise Deployment with APIMatic Kubernetes Operator</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>How Are SDKs and API Documentation Helping API Industries?</title>
		<link>/blog/the-customers-pov-how-do-sdks-and-api-documentation-help-business/</link>
		
		<dc:creator><![CDATA[Nida I Zamir]]></dc:creator>
		<pubDate>Fri, 25 Feb 2022 08:34:38 +0000</pubDate>
				<category><![CDATA[API Documentation]]></category>
		<category><![CDATA[API Portal]]></category>
		<category><![CDATA[APIMATIC]]></category>
		<category><![CDATA[Automation]]></category>
		<category><![CDATA[Case Studies]]></category>
		<category><![CDATA[CodeGen]]></category>
		<category><![CDATA[Communication APIs]]></category>
		<category><![CDATA[FinTech APIs]]></category>
		<category><![CDATA[SDK]]></category>
		<category><![CDATA[Api documentation]]></category>
		<category><![CDATA[auto-generated SDKs]]></category>
		<category><![CDATA[Case Study]]></category>
		<category><![CDATA[customer]]></category>
		<guid isPermaLink="false">https://apimatic.io/blog/?p=1693</guid>

					<description><![CDATA[<p>The API community seems to have settled upon one ground rule: give the developers what they want, and then some more. Yay for the external developers (the API users), nay for the internal developers (the API developers).&#160; The exponential growth in APIs and the consequent competition between the API providers warrant the need for maximum [&#8230;]</p>
<p>The post <a rel="nofollow" href="/blog/the-customers-pov-how-do-sdks-and-api-documentation-help-business/">How Are SDKs and API Documentation Helping API Industries?</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></description>
										<content:encoded><![CDATA[<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p class=""><img class="aligncenter wp-image-1697 " src="/wp-content/uploads/2022/04/CustomrPoV3-02-1024x619.png" alt="SDKs and API documentation by APIMatic" width="744" height="450"></p>
<p class=""><span style="font-weight: 400;">The API community seems to have settled upon one ground rule: give the developers what they want, and then some more. Yay for the external developers (the API users), nay for the internal developers (the API developers).&nbsp; </span></p>
<p class=""><span style="font-weight: 400;">The exponential growth in APIs and the consequent competition between the API providers warrant the need for maximum developer experience with the least onboarding problems.</span></p>
<p class=""><span style="font-weight: 400;">Automated SDK and API documentation generations are a sure way to boost API adoption while lifting the strain of repetitive tasks off developers. API provider companies from various industries like communication, fintech, and travel enjoy better team productivity and faster time to market as the time-consuming monotony of maintaining SDKs and API documentation is handled by APIMatic.</span></p>
<h2 class=""><span style="font-weight: 400;">Communication APIs: Increased Developer Productivity for MessageMedia</span></h2>
<p class=""><a href="https://messagemedia.com/us/"><span style="font-weight: 400;">MessageMedia</span></a><span style="font-weight: 400;"> is Australia’s leading global business messaging platform that offers communication services between its customers’ workforce.</span></p>
<p class=""><span style="font-weight: 400;">Sending over a billion messages per year and servicing thousands of global customers required a streamlined developer experience to integrate their various messaging APIs, and manually updating SDKs on each update was not optimal.</span></p>
<p class=""><span style="color: #999999;"><i><span style="font-weight: 400;">“One of the problems we had with our SDKs was if a new feature was added to the API, we would have to manually make the code changes to the SDKs itself. Given we have 6 SDKs for each of our APIs, it was a long and inefficient process to update.” — Ibrahim Tareq, Developer Evangelist</span></i></span></p>
<p class=""><span style="font-weight: 400;">With APIMatic’s CodeGen Engine, MessageMedia was able to auto-generate SDKs in all of the required languages, and the SDKs could reflect changes in the API on the go, which had been a pain point for the team.</span></p>
<p class=""><span style="color: #999999;"><i><span style="font-weight: 400;">“It has helped reduce the barrier of entry… you can hand out SDKs to your customers and make it easier and simpler for them to code their way to the first ‘hello world’.”</span></i></span></p>
<p class="">Case Study: <a href="https://blog.apimatic.io/messagemedia-speaking-the-language-of-developers-with-apimatic-codegen-5a3a7ad17d8e"><span style="font-weight: 400;">MessageMedia Increases Developer Productivity with Autogenerated SDKs</span></a></p>
<h2 class=""><span style="font-weight: 400;">Fintech APIs: Revenue Generator for Fortune 500 Fintech</span></h2>
<p class=""><span style="font-weight: 400;">This leading financial services giant provides access to the world’s largest independent payment network to almost any country in the world through API integrations.&nbsp;</span></p>
<p class=""><span style="font-weight: 400;">Hence, this company was quick to realize that in order to obtain partnerships and integrations with third parties, they needed to reach out to a larger developer community and ensure that their APIs were adopted faster. They began offering .NET and Java SDKs for their APIs, which were built in-house, but maintaining them took the time that could instead be spent on expanding their API landscape with the growing demand.</span></p>
<p class=""><span style="color: #999999;"><i><span style="font-weight: 400;">“Writing SDKs for just two languages was a pretty time consuming and expensive </span></i><i><span style="font-weight: 400;">process, every time we had a release that affected those services, it would increase </span></i><i><span style="font-weight: 400;">our sprints and dev timelines” &#8211; Head of Innovation</span></i></span></p>
<p class=""><span style="font-weight: 400;">APIMatic’s CodeGen Engine streamlined their process in the form of automatically generated SDKs and API documentation for six languages instead of two, directly from their API definition files. This resulted in cost savings of hundreds of thousands of dollars compared to building SDKs and docs in-house while reducing their time to market the APIs.</span></p>
<p class=""><span style="color: #999999;"><i><span style="font-weight: 400;">“Fast go-to-market time for documentation, and then the ability to generate SDKs in </span></i><i><span style="font-weight: 400;">multiple languages; those were the things that attracted us to APIMatic.”</span></i></span></p>
<p class="">Case Study: <a href="https://www.apimatic.io/success-stories/fintech/a-fortune-500-fintech-company/"><span style="font-weight: 400;">How APIMatic Became a Revenue Generator for a Fortune 500 Fintech</span></a></p>
<h2 class=""><span style="font-weight: 400;">Operation Management APIs: From 1 Week to 18 Seconds with Dude Solutions</span></h2>
<p class=""><a href="https://www.dudesolutions.com/"><span style="font-weight: 400;">Dude Solutions</span></a><span style="font-weight: 400;"> is a leading software-as-a-service (SaaS) provider of operations management solutions for education, government, healthcare, and many industries.</span></p>
<p class=""><span style="font-weight: 400;">They have two front-facing REST APIs that drive their platform and are supported by a set of micro-services that specialize in different areas.&nbsp;</span></p>
<p class=""><span style="font-weight: 400;">Dude Solutions realized early on that with SDKs, they would have sharable software that could be used across the entire platform. It would reduce the amount of code in each API stack and understand the security protocols. However, they started by creating the SDKs from scratch and soon enough found out that it was just as long a process as API development.</span></p>
<p class=""><span style="color: #999999;"><i><span style="font-weight: 400;">“We learned that it takes almost as long to do the API implementation as it did the SDK development. In fact, it took one week to develop the SDK for a single language.” &#8211; Brian Hyder, Engineering Manager</span></i></span></p>
<p class=""><span style="font-weight: 400;">When they began designing their next micro-service, Dude Solutions started looking for alternate ways for SDK development and came across APIMatic. The autogeneration of SDKs in multiple languages helped drastically cut down SDK development and maintenance costs.</span></p>
<p class=""><span style="color: #999999;"><i><span style="font-weight: 400;">“Development time for SDKs for each language went from 1 week to 18 seconds thanks to APIMatic.”</span></i></span></p>
<p class="">&nbsp;</p>
<p class=""><span style="font-weight: 400;"><img class="aligncenter wp-image-1695 size-full" src="/wp-content/uploads/2022/04/dude-solutions.png" alt="" width="603" height="393"></span></p>
<p class=""><span style="font-weight: 400;">While they had initially planned to provide SDKs in 3 languages, the significant time and cost reduction enabled them to provide SDKs for 7 languages with APIMatic’s autogenerated SDKs.</span></p>
<p class="">Read More: <a href="https://blog.apimatic.io/automate-all-the-things-how-dude-solutions-saved-20-000-in-development-costs-using-apimatic-f9c05118f041"><span style="font-weight: 400;">How Dude Solutions Cut Down Time to Release from 1 Week to 18 Seconds</span></a></p>
<h2 class=""><span style="font-weight: 400;">Travel APIs: Client Onboarding Time Reduced by 20% for Didgigo</span></h2>
<p class=""><a href="https://www.didgigo.com/"><span style="font-weight: 400;">Didgigo</span></a><span style="font-weight: 400;"> is a digital media platform that assists travel agents in organizing and maintaining data, as well as creating detailed itinerary proposals that save time and boost sales opportunities for clients.</span></p>
<p class=""><span style="font-weight: 400;">Didgigo offers APIs that allow travel experts to create travel documents for their clients automatically and publish both digital and print versions at the same time. However, for a firm that excels at offering automated tailor-made solutions to its clients, it became critical to find a solution that could shorten the API onboarding time for customers, without the engineering team having to context switch on each release.</span></p>
<p class=""><span style="color: #999999;"><i><span style="font-weight: 400;">“Our process was extremely manual and required a lot of back and forth” &#8211; Keanu Ashwell, Development Operations Engineer</span></i></span></p>
<p class=""><span style="font-weight: 400;">With APIMatic’s autogenerated documentation in multiple languages, Didgigo is able to shift its focus on building robust APIs, without having to devote time and resources to maintain the documentation. The customer onboarding process has become more streamlined, with tickets raised during onboarding being <strong>reduced by 11-20%</strong>, and customer onboarding meetings going down by more than 7 meetings per quarter.</span></p>
<p class=""><span style="color: #999999;"><i><span style="font-weight: 400;">“Our experience with APIMatic and its provisions has been exceptional. We haven&#8217;t had </span></i><i><span style="font-weight: 400;">much time to maintain everything as we&#8217;re still strapped for resources due to COVID-19, </span></i><i><span style="font-weight: 400;">but we&#8217;ve still been able to rely on APIMatic to give our API users an understanding of </span></i><i><span style="font-weight: 400;">what functionality we expose via our APIs. The ability to test [the APIs] is also a feature I </span></i><i><span style="font-weight: 400;">love and something that drew me to the service when we migrated from our in-house Swagger solution.”</span></i></span></p>
<p class="">Case Study: <a href="https://www.apimatic.io/success-stories/api-portal/didgigo/"><span style="font-weight: 400;">How Didgigo Reduces Client Onboarding Time with Autogenerated Documentation</span></a></p>
<h2 class=""><span style="font-weight: 400;">Healthcare/Senior Living APIs: Time to Release Down by 30% for Caremerge</span></h2>
<p class=""><a href="https://caremerge.com/"><span style="font-weight: 400;">Caremerge</span></a> <span style="font-weight: 400;">is an </span><span style="font-weight: 400;">all-in-one platform that empowers families, residents, and staff of senior citizens by </span><span style="font-weight: 400;">providing tools for modern elder care including family engagement, community engagement, chronic care management, and more.</span></p>
<p class=""><span style="font-weight: 400;">Caremerge also uses various pre-existing services to make them more accessible for these senior citizens, for example with voice commands. However, managing all these services in a single platform requires multiple internal microservices and a public API.</span></p>
<p class=""><span style="font-weight: 400;">The Caremerge API powers communication between the services they offer and allows them to build integrations with various third-party vendors and services. Building those integrations requires the documentation for the API to be always updated, so developers spend less time figuring out how to integrate.</span></p>
<p class=""><span style="font-weight: 400;">Using APIMatic’s autogenerated API documentation with the API playground allows developers to test inputs and outputs within the docs, resulting in quicker integration of the API, and helps Caremerge cut down on time spent on maintenance.</span></p>
<p class=""><span style="color: #999999;"><em><span style="font-weight: 400;">“APIMatic helps us save 20–30% of the time it took us to manage documentation for our API” &#8211; </span><span style="font-weight: 400;">Fahad Aziz, Co-Founder, and CTO</span></em></span></p>
<p class="">Read More: <a href="https://blog.apimatic.io/serving-the-senior-living-industry-with-caremerge-api-734da95b2d9b"><span style="font-weight: 400;">Serving The Senior Living Industry with Caremerge</span></a></p>
<div class="row bg-editor-hr-wrap">
<div class="col-md-12 col-xs-12 col-sm-12">
<hr>
</div>
</div>
<p class=""><span style="font-weight: 400;">Quicker synchronization of documentation and SDKs with APIs leads to shorter sprints and faster time to market. With a mission to make API consumption as simple as possible, APIMatic considers it a victory when our</span><a href="https://www.apimatic.io/success-stories/"><span style="font-weight: 400;"> customers’ APIs are consumed</span></a><span style="font-weight: 400;"> more readily with our autogenerated SDKs and documentation.</span></p>
</div>
</div>
</div>
</div>
<p>The post <a rel="nofollow" href="/blog/the-customers-pov-how-do-sdks-and-api-documentation-help-business/">How Are SDKs and API Documentation Helping API Industries?</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>An Insight into APIMatic’s Autogenerated SDKs</title>
		<link>/blog/an-insight-into-apimatics-autogenerated-sdks/</link>
		
		<dc:creator><![CDATA[Arooj Arshad]]></dc:creator>
		<pubDate>Mon, 21 Feb 2022 11:44:24 +0000</pubDate>
				<category><![CDATA[Automation]]></category>
		<category><![CDATA[CLI]]></category>
		<category><![CDATA[CodeGen]]></category>
		<category><![CDATA[SDK]]></category>
		<category><![CDATA[API]]></category>
		<category><![CDATA[Apimatic]]></category>
		<category><![CDATA[auto-generated SDKs]]></category>
		<category><![CDATA[Code Generation]]></category>
		<category><![CDATA[Sdks]]></category>
		<guid isPermaLink="false">https://apimatic.io/blog/?p=1665</guid>

					<description><![CDATA[<p>How can you reduce client onboarding of your API so that the API user quickly gets to their first &#8220;Hello World&#8221;? One definitive way is to provide an SDK for a developer&#8217;s technology stack so that they can easily integrate your APIs onto their native platforms. By providing an SDK, it becomes much simpler for [&#8230;]</p>
<p>The post <a rel="nofollow" href="/blog/an-insight-into-apimatics-autogenerated-sdks/">An Insight into APIMatic’s Autogenerated SDKs</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></description>
										<content:encoded><![CDATA[<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<div class="">
<p class=""><img class=" wp-image-1675 aligncenter" src="/wp-content/uploads/2022/04/updated-pic.png" alt="Generate SDK" width="572" height="404"></p>
<p class=""><span style="font-weight: 400">How can you reduce client onboarding of your API so that the API user quickly gets to their first &#8220;Hello World&#8221;?</span> <span style="font-weight: 400">One definitive way is to provide an SDK for a developer&#8217;s technology stack so that they can easily integrate your APIs onto their native platforms.</span><span style="font-weight: 400"> By providing an SDK, it becomes much simpler for a developer to integrate your API in ways that are familiar and well-integrated with their existing toolchain</span><span style="font-weight: 400">.</span></p>
<p class=""><span style="font-weight: 400">In simpler terms, it is no longer enough to expose your API endpoints with just HTTP documentation or API references. You need to attract developers to enable them to comfortably play around with your code, and this is what APIMatic SDKs help with.</span></p>
<h2 class=""><span style="font-weight: 400">APIMatic as a Code Generator</span></h2>
<p class=""><span style="color: #3366ff"><a style="color: #3366ff" href="https://www.apimatic.io/"><span style="font-weight: 400">APIMatic</span></a></span><span style="font-weight: 400"> autogenerates SDKs </span><span style="font-weight: 400">f</span><span style="font-weight: 400">or APIs automatically in all major programming languages so that developers can consume APIs in their favorite development environment with less code, less effort, and more fun</span><span style="font-weight: 400">. </span><span style="font-weight: 400">These </span><span style="color: #3366ff"><a style="color: #3366ff" href="https://docs.apimatic.io/generate-sdks/overview-sdks/"><span style="font-weight: 400">comprehensive SDKs</span></a></span><span style="font-weight: 400"> help accelerate the API consumption process as they can be automatically generated and shipped along with your latest API update. They accurately map your API definition files into their respective classes and controllers while adhering to the best coding practices. APIMatic further provides flexibility to customize code generation through </span><span style="color: #3366ff"><a style="color: #3366ff" href="https://docs.apimatic.io/generate-sdks/configure-codegen/"><span style="font-weight: 400">Customizable CodeGen Settings</span></a></span><span style="font-weight: 400">. APIMatic generates SDKs in the following languages:</span></p>
<ul class="">
<li style="font-weight: 400"><span style="font-weight: 400">PHP</span></li>
<li style="font-weight: 400"><span style="font-weight: 400">Ruby</span></li>
<li style="font-weight: 400"><span style="font-weight: 400">Python</span></li>
<li style="font-weight: 400"><span style="font-weight: 400">C# (.NET)</span></li>
<li style="font-weight: 400"><span style="font-weight: 400">Java</span></li>
<li style="font-weight: 400"><span style="font-weight: 400">TypeScript</span></li>
</ul>
<p class=""><span style="font-weight: 400">Building and maintaining these feature-packed SDKs from scratch is not easy and requires extensive engineering time and effort. However, autogenerated SDKs can significantly cut down costs and time.</span> <span style="font-weight: 400">For more detailed pros and cons of manually generating SDKs against autogenerating them, read here on </span><span style="color: #3366ff"><a style="color: #3366ff" href="https://www.apimatic.io/blog/2021/09/the-great-sdk-battle-build-vs-buy/"><span style="font-weight: 400">The Great SDK Battle: Build vs Buy</span></a></span><span style="font-weight: 400">.</span></p>
<h2 class=""><span style="font-weight: 400">How does APIMatic Autogenerate SDKs?</span></h2>
<p class=""><span style="font-weight: 400">SDK generation is a tricky challenge for API providers. On one side, you want to keep SDKs with minimal code and dependencies and on the other hand, you want to customize the generated code according to the needs of the developers. APIMatic gives you an easy solution by providing autogenerated SDKs for your APIs.</span></p>
<p class=""><span style="font-weight: 400">APIMatic’s Code Generation Engine follows several steps internally to generate client libraries from API definition files. The code generation process starts with an input API definition file which can be in any of the multiple supported </span><span style="color: #3366ff"><a style="color: #3366ff" href="https://www.apimatic.io/transformer/#supported-formats"><span style="font-weight: 400">API definition formats</span></a></span><span style="font-weight: 400"> like OpenAPI, RAML, API Blueprint, etc.</span></p>
<ul class="">
<li><b>API Transformation: </b><span style="font-weight: 400">This step transforms the input API definition file into APIMatic&#8217;s format which contains useful information for SDK generation that is not available in other API definition formats.</span></li>
<li style="font-weight: 400"><b>API Validation:</b> <span style="font-weight: 400">After an input file is transformed into APIMatic’s format, it is validated. The validation process includes checking for syntactical and semantical discrepancies in the API definition and shows critical warnings and errors to be fixed before SDK generation can proceed.</span></li>
<li style="font-weight: 400"><b>SDK Generation: </b><span style="font-weight: 400">Now, components of the API definition are looped over to generate code representations. While a basic SDK caters to settings, endpoints, and an abstraction layer, APIMatic goes an extra step by mapping your API completely into an SDK</span><span style="font-weight: 400">. </span><span style="font-weight: 400">Some important entity conversions from an API definition to an SDK are:</span>
<ul>
<li style="font-weight: 400"><b>Settings -&gt; Configuration files:</b><span style="font-weight: 400"> All API settings like environment configuration etc are consolidated in a configuration file.</span></li>
<li style="font-weight: 400"><b>Endpoints -&gt; Functions:</b><span style="font-weight: 400"> Each endpoint maps onto an independent function.</span></li>
<li style="font-weight: 400"><b>Groups -&gt; Controller class files:</b><span style="font-weight: 400"> Endpoints are automatically grouped into separate Controller classes.</span></li>
<li style="font-weight: 400"><b>Models -&gt; Model class files:</b><span style="font-weight: 400"> Data input is converted into models.</span></li>
<li style="font-weight: 400"><b>Errors -&gt; Exception class files:</b><span style="font-weight: 400"> Errors are handled as exceptions via a unified exception class.&nbsp;</span></li>
</ul>
</li>
</ul>
<p class=""><span style="font-weight: 400">&nbsp; &nbsp;</span></p>
<p class=""><span style="font-weight: 400">&nbsp; &nbsp; Apart from these core files, the CodeGen engine also generates the following utility files:</span></p>
<ul class="">
<li style="list-style-type: none">
<ul class="">
<li style="font-weight: 400;text-align: left"><span style="font-weight: 400">&nbsp;HTTP abstraction layer</span></li>
<li style="font-weight: 400;text-align: left"><span style="font-weight: 400">&nbsp;Helper class files</span></li>
<li style="font-weight: 400;text-align: left"><span style="font-weight: 400">Client library interface</span></li>
<li style="font-weight: 400;text-align: left"><span style="font-weight: 400">Language/platform-dependent files</span></li>
</ul>
</li>
<li style="font-weight: 400"><b>Documentation Generation: </b><span style="font-weight: 400">Every generated SDK also includes a README.md file. The README contains complete class reference and code samples for the SDK and guides the user on setting up the environment (using tool-specific IDEs), initializing the client, creating the controller, calling the endpoints, and testing them.&nbsp;</span></li>
<li><b>Packaging:</b> <span style="font-weight: 400">After all the SDK files have been generated, there are multiple packaging options available to APIMatic users. You can either get the SDK packaged in a zip file, have it deployed to GitHub, or </span><span style="color: #3366ff"><a style="color: #3366ff" href="https://docs.apimatic.io/generate-sdks/publishing-a-package/"><span style="font-weight: 400">publish it as a package</span></a></span><span style="font-weight: 400"> on platforms like npm, NuGet, RubyGems, and PyPI.</span></li>
</ul>
<p class="">&nbsp;</p>
<p class=""><span style="font-weight: 400">For more detail on the mapping from an API specification file to SDK, please refer to the </span><span style="color: #3366ff"><a style="color: #3366ff" href="https://docs.apimatic.io/generate-sdks/overview-sdks/"><span style="font-weight: 400">APIMatic SDK O</span>verview</a></span><span style="font-weight: 400">.</span></p>
<h2 class=""><span style="font-weight: 400">Features Supported in APIMatic&#8217;s Autogenerated SDKs&nbsp;</span></h2>
<p class=""><span style="font-weight: 400">APIMatic SDKs supports the latest versions and language dependencies, along with features that make them as robust and fault-tolerant as possible.</span></p>
<p class=""><strong>Immutable Clients for Multi-Threading</strong></p>
<p class=""><span style="font-weight: 400">An</span><a href="https://docs.apimatic.io/changelog/apimatic-code-generator-v3-titan#new-immutable-clients-in-sdks"> <span style="font-weight: 400">Immutable Client</span></a><span style="font-weight: 400"> does not allow the user of the client to mutate the client (i.e change its state) once it has been created.</span> <span style="font-weight: 400">Client classes of all the SDKs are designed using the immutable design pattern. This gives developers the assurity that no method call would mutate its state once the client is instantiated.</span></p>
<p class=""><strong>Timeout and Retries on API Call Errors</strong></p>
<p class=""><span style="font-weight: 400">APIMatic generated SDKs help you write fault-tolerant applications by helping deal with network fault errors. If an API call fails due to network problems, it is retried with an exponentially increasing wait time up to a maximum retry count specified by the user. This is particularly helpful during temporary network outages.</span></p>
<p class=""><strong>Support for XML in API Calls</strong></p>
<p class=""><span style="font-weight: 400">The SDKs contain support for </span><a href="https://docs.apimatic.io/changelog/apimatic-code-generator-v3-titan#support-for-xml"><span style="font-weight: 400">sending and receiving XML</span></a><span style="font-weight: 400"> in the API calls, alongside JSON. So if your API definition uses XML, it can be imported into APIMatic to generate SDKs without having to worry about serializing and deserializing the XML data.</span><span style="font-weight: 400">&nbsp;</span></p>
<p class=""><strong>oneOf and anyOf Support</strong></p>
<p class=""><span style="font-weight: 400">Java, Python, and PHP SDKs contain the support of <strong>oneOf</strong> and <strong>anyOf</strong> which gives the ability to create a complex schema or validate a value against multiple criteria.</span></p>
<p class=""><strong>Support for Nullable Properties in Models</strong></p>
<p class=""><span style="font-weight: 400">J</span><span style="font-weight: 400">ava and C# SDKs contain nullable properties in models, so if a user does not assign any value to a property after model instance initialization, a null value will be sent in the HTTP request instead of being skipped altogether.</span></p>
<p class=""><strong>Access to HTTP Response Data</strong></p>
<p class=""><span style="font-weight: 400">The SDKs also allow access to the HTTP response information like response headers, status code, and body on API calls. </span></p>
<p class=""><span style="font-weight: 400">Other features in the SDKs include optimized error messages, handling cancellation of API calls, and more. For more information and details on all the features that APIMatic SDKs provide, have a look at our </span><span style="color: #3366ff"><a style="color: #3366ff" href="https://docs.apimatic.io/generate-sdks/sdk-features/"><span style="font-weight: 400">SDK Features List</span></a></span><span style="font-weight: 400">.</span></p>
<h2 class=""><span style="font-weight: 400">How to Generate SDKs from API Definitions?</span></h2>
<p><span style="font-weight: 400">Next, comes the part where you can generate your SDKs via various options according to your specified use case:</span></p>
<ul class="">
<li style="font-weight: 400"><span style="color: #3366ff"><a style="color: #3366ff" href="https://docs.apimatic.io/generate-sdks/generating-sdks/#generate-sdks-via-web"><span style="font-weight: 400">Web</span></a></span></li>
<li style="font-weight: 400"><span style="color: #3366ff"><a style="color: #3366ff" href="https://docs.apimatic.io/generate-sdks/generating-sdks/#generate-sdks-via-api"><span style="font-weight: 400">API</span></a></span><span style="font-weight: 400">&nbsp;</span></li>
<li style="font-weight: 400"><span style="color: #3366ff"><a style="color: #3366ff" href="https://docs.apimatic.io/generate-sdks/generating-sdks/#generate-sdks-via-apimatic-cli"><span style="font-weight: 400">APIMatic CLI</span></a></span></li>
</ul>
<h3 class=""><span style="font-weight: 400">Generate SDKs through Web</span></h3>
<p class=""><span style="font-weight: 400">You can generate an SDK for any API definition file in your favorite language through our </span><span style="color: #3366ff"><a style="color: #3366ff" href="https://www.apimatic.io/dashboard"><span style="font-weight: 400">APIMatic dashboard</span></a></span><span style="font-weight: 400">. Select any API or its version from the dashboard and generate the SDK via the ‘Generate’</span> <span style="font-weight: 400">button. After the validation process, you can choose to download the SDK as a zip file, deploy it to Github or publish it as a package.</span></p>
<p><figure id="attachment_1668" aria-describedby="caption-attachment-1668" style="width: 590px" class="wp-caption aligncenter"><img class="size-full wp-image-1668" src="/wp-content/uploads/2022/04/generation-options.png" alt="" width="590" height="582"><figcaption id="caption-attachment-1668" class="wp-caption-text">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Generating SDK Options</figcaption></figure></p>
<h3 class=""><span style="font-weight: 400">Generate SDKs through API</span></h3>
<p class=""><span style="font-weight: 400">You can automate the process of SDK generation using</span> <span style="color: #3366ff"><a style="color: #3366ff" href="https://www.apimatic.io/apidocs/apimatic/"><span style="font-weight: 400">APIMatic&#8217;s CodeGen API</span></a>,<span style="color: #000000"> by integrating it into your CI/CD pipelines</span></span><span style="font-weight: 400">. </span><span style="font-weight: 400">You can generate SDKs for APIs already imported into APIMatic, any external API, or by specifying a URL. The generated SDKs are downloaded as a zip file in your system.</span></p>
<pre class=""><code class="language-cs">{
    string apiEntityId = &quot;apiEntityId2&quot;; 
    Platforms template = Platforms.CSNETSTANDARDLIB; 

    try { &nbsp;&nbsp;&nbsp;
            APIEntityCodeGeneration result = await codeGenerationImportedApisController
                                                        .GenerateSDKAsync(apiEntityId, template); 
        } 
    catch (ApiException e) {};
}</code></pre>
<h3 class=""><span style="font-weight: 400">Generate SDKs through APIMatic CLI</span><span style="font-weight: 400">&nbsp;</span></h3>
<p class=""><span style="font-weight: 400">You can also integrate the </span><span style="color: #3366ff"><a style="color: #3366ff" href="https://docs.apimatic.io/apimatic-cli/intro-and-install/"><span style="font-weight: 400">APIMatic CLI</span></a></span><span style="font-weight: 400"> into your CI/CD pipelines for a seamless and automated experience. APIMatic CLI supports all the basic features like validation, transformation, SDK, and documentation generation. You can generate an SDK for your API through the CLI via the <strong>apimatic SDK:generate</strong> command:&nbsp;</span></p>
<p class=""><img class="aligncenter wp-image-1680 size-full" src="/wp-content/uploads/2022/04/cli-image.png" alt="apimatic-cli command to generate SDK" width="779" height="97"></p>
<p class=""><span style="font-weight: 400">For more details, read our </span><span style="color: #3366ff"><a style="color: #3366ff" href="https://docs.apimatic.io/generate-sdks/generating-sdks/"><span style="font-weight: 400">Generating SDKs via APIMatic Docs</span></a></span><span style="font-weight: 400">.</span></p>
<h2 class=""><span style="font-weight: 400">Wrapping it Up!</span></h2>
<p class=""><span style="font-weight: 400">Creating SDKs in multiple languages is quite resource-intensive and expensive. Good SDKs save both time and cognitive effort when integrating with a provider’s API. This is why APIMatic&#8217;s CodeGen engine gives you the maximum advantage in creating SDKs and takes care of all the SDK generation and maintenance work behind the scenes while your developers can focus on their applications and innovative solutions.&nbsp;</span></p>
<p class="">&nbsp;</p>
</div>
</div>
</div>
</div>
</div>
<p>The post <a rel="nofollow" href="/blog/an-insight-into-apimatics-autogenerated-sdks/">An Insight into APIMatic’s Autogenerated SDKs</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Automating Developer Experience with APIMatic CLI</title>
		<link>/blog/automate-dx-with-apimatic-cli/</link>
		
		<dc:creator><![CDATA[Nida I Zamir]]></dc:creator>
		<pubDate>Fri, 21 Jan 2022 11:15:14 +0000</pubDate>
				<category><![CDATA[API Documentation]]></category>
		<category><![CDATA[API Portal]]></category>
		<category><![CDATA[API Transformer]]></category>
		<category><![CDATA[Automation]]></category>
		<category><![CDATA[CLI]]></category>
		<category><![CDATA[SDK]]></category>
		<category><![CDATA[API portal]]></category>
		<category><![CDATA[APIMatic CLI]]></category>
		<category><![CDATA[automation]]></category>
		<category><![CDATA[Sdks]]></category>
		<guid isPermaLink="false">https://apimatic.io/blog/?p=1627</guid>

					<description><![CDATA[<p>APIs act as a bridge to multiple tiers in distributed software systems. However, reflecting the changes of fast-evolving APIs among these connected tiers is a huge drain in productivity, and increases the time to market. This means that your software tiers must always remain in sync, and in an ideal world also minimize the redundancy [&#8230;]</p>
<p>The post <a rel="nofollow" href="/blog/automate-dx-with-apimatic-cli/">Automating Developer Experience with APIMatic CLI</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p><img class=" wp-image-9666 aligncenter" src="/wp-content/uploads/2022/01/Dev-Cycle-1024x690-1.png" alt="" width="549" height="370" srcset="/wp-content/uploads/2022/01/Dev-Cycle-1024x690-1.png 1024w, /wp-content/uploads/2022/01/Dev-Cycle-1024x690-1-300x202.png 300w, /wp-content/uploads/2022/01/Dev-Cycle-1024x690-1-768x518.png 768w" sizes="(max-width: 549px) 100vw, 549px" /></p>
<div class="boldgrid-section">
<div class="container">
<p class=""><span style="font-weight: 400;">APIs act as a bridge to multiple tiers in distributed software systems. However, reflecting the changes of fast-evolving APIs among these connected tiers is a huge drain in productivity, and increases the time to market. </span><span style="font-weight: 400;">This means that your software tiers must always remain in sync, and in an ideal world also minimize the redundancy of generating documentation and SDKs on each update.&nbsp;</span></p>
<p class=""><span style="font-weight: 400;">The <a href="https://docs.apimatic.io/apimatic-cli/intro-and-install/">APIMatic CLI</a> ensures that your developer experience checklist is in check at all times by automating the redundant, time and resource-consuming tasks of API validation, documentation, and SDK maintenance. The APIMatic CLI offers feature parity by providing automation in the form of:&nbsp;</span></p>
<ul class="">
<li style="font-weight: 400;" aria-level="1"><span style="font-weight: 400;">API Validator</span></li>
<li style="font-weight: 400;" aria-level="1"><span style="font-weight: 400;">API Transformer&nbsp;</span></li>
<li style="font-weight: 400;" aria-level="1"><span style="font-weight: 400;">SDK Generator</span></li>
<li style="font-weight: 400;" aria-level="1"><span style="font-weight: 400;">API Portal Generator</span></li>
</ul>
<div class="row bg-editor-hr-wrap">
<div class="col-md-12 col-xs-12 col-sm-12">
<div class="row bg-editor-hr-wrap">
<div class="col-md-12 col-xs-12 col-sm-12">
<hr>
</div>
</div>
</div>
</div>
<div class="row bg-editor-hr-wrap">
<div class="col-md-12 col-xs-12 col-sm-12">
<div class="row bg-editor-hr-wrap">
<div class="col-md-12 col-xs-12 col-sm-12">
<div><span style="font-weight: 400;">You can integrate the APIMatic CLI into your CI/CD pipelines for a seamless and automated experience. For example, every time your pipeline detects a change in the API, it can trigger </span><a href="https://www.apimatic.io/continuous-code-generation/"><span style="font-weight: 400;">automatic code generation</span></a><span style="font-weight: 400;"> for the API without any human intervention and you can ship updated SDKs as soon as the API is updated. </span></div>
</div>
</div>
</div>
</div>
<p class=""><span style="font-weight: 400;">For a quick walkthrough of the newly introduced CLI, we’ll be using the Uber API specification.</span></p>
<h2 class=""><span style="font-weight: 400;">Installing the APIMatic CLI</span></h2>
<p class=""><span style="font-weight: 400;">Installing the CLI is quick and painless. You only need </span><b>Node.JS</b><span style="font-weight: 400;"> and </span><b>npm </b><span style="font-weight: 400;">as a pre-requisite to execute the following command, and you’re good to go:</span></p>
<pre class=""><code class="language-bash">npm install -g @apimatic/cli</code></pre>
<h2 class=""><span style="font-weight: 400;">Validating the API for Unforeseen Errors</span></h2>
<p class=""><span style="font-weight: 400;">Validating the API definition against robust internal checks ensures you have a smooth experience using APIMatic’s services. Fixing these validation issues before proceeding to generate portals or SDKs helps save debugging time. The </span><a href="https://docs.apimatic.io/rulesets/overview/"><span style="font-weight: 400;">validation output</span></a><span style="font-weight: 400;"> is categorized into three categories defined below:</span></p>
<ul class="">
<li style="font-weight: 400;" aria-level="1"><b>Errors</b><span style="font-weight: 400;">: Any syntax/semantic issues found in the API definition.</span></li>
<li style="font-weight: 400;" aria-level="1"><b>Warnings</b><span style="font-weight: 400;">: Any unexpected behavior that may affect the output.</span></li>
<li style="font-weight: 400;" aria-level="1"><b>Info</b><span style="font-weight: 400;">: Recommendations or suggestions that can help enhance your API definition and its completeness.</span></li>
</ul>
<p>&nbsp;</p>
<p class=""><span style="font-weight: 400;">To validate your API definition, run the </span><b>apimatic api:validate</b><span style="font-weight: 400;"> command by providing the path to the file:</span></p>
<p class=""><img class="aligncenter wp-image-1634 size-full" src="https://devapi.dream.press/wp-content/uploads/2022/01/validation.png" alt="validate using CLI" width="637" height="91"></p>
<p class=""><span style="font-weight: 400;">The API definition validated here does not seem to have any critical errors and warnings that need fixing, so we can move forward to either generate SDKs and API Portals or transform the API specification into another format.</span></p>
<h2 class=""><span style="font-weight: 400;">Generating SDKs to Speak in the Language of Developers</span></h2>
<p class=""><span style="font-weight: 400;">Once the API is validated, you can proceed to generate multi-language SDKs from the API definition, directly via the command line. The </span><b>apimatic sdk:generate</b><span style="font-weight: 400;"> command generates an SDK in a specified language and downloads it to the specified destination folder.</span></p>
<p class=""><span style="font-weight: 400;">For example, I generated a Python SDK from the Uber API using the APIMatic CLI:&nbsp;</span></p>
<p class=""><span style="font-weight: 400;"><img class="aligncenter wp-image-1631 size-full" src="https://devapi.dream.press/wp-content/uploads/2022/01/sdk.png" alt="" width="742" height="102"></span></p>
<p class=""><span style="font-weight: 400;">Now check the destination folder, where the SDK has been downloaded in .zip form. Extracting the .zip file shows the complete SDK files, including a comprehensive README to use the SDK:</span></p>
<p class=""><img class="aligncenter wp-image-1632 size-full" src="https://devapi.dream.press/wp-content/uploads/2022/01/sdk-downloaded.png" alt="sdk generation using cli" width="661" height="323"></p>
<p class=""><span style="font-weight: 400;">You can use your favorite IDE to start building applications using the Uber API SDK straightaway. To read more about APIMatic SDKs, please refer to the </span><a href="https://docs.apimatic.io/generate-sdks/overview-sdks/"><span style="font-weight: 400;">APIMatic SDK documentation</span></a><span style="font-weight: 400;">.</span></p>
<h2 class=""><span style="font-weight: 400;">Generating API Portal for Higher Adoption</span></h2>
<p class=""><span style="font-weight: 400;">APIMatic embraces the ‘documentation as code’ philosophy, allowing you to specify all aspects of the API documentation as code. The </span><a href="https://www.apimatic.io/developer-experience-portal/"><span style="font-weight: 400;">API Portal</span></a><span style="font-weight: 400;"> bundles API documentation, SDKs, and code samples into a static website. Just like with all products of APIMatic, the API Portal can be generated right from the terminal as well, letting the entire process be made part of the release pipeline.</span></p>
<p class=""><span style="font-weight: 400;">In order to generate an API Portal, the CLI expects inputs to be provided in a specific format:</span></p>
<ul class="">
<li style="font-weight: 400;" aria-level="1"><span style="font-weight: 400;">A </span><i><span style="font-weight: 400;">content </span></i><span style="font-weight: 400;">directory containing Markdown guides.</span></li>
<li style="font-weight: 400;" aria-level="1"><span style="font-weight: 400;">A </span><i><span style="font-weight: 400;">spec </span></i><span style="font-weight: 400;">directory containing API specifications.</span></li>
<li style="font-weight: 400;" aria-level="1"><span style="font-weight: 400;">A </span><i><span style="font-weight: 400;">static </span></i><span style="font-weight: 400;">directory containing images or any other static content referenced in the documentation.</span></li>
<li style="font-weight: 400;" aria-level="1"><span style="font-weight: 400;">A configuration file called </span><i><span style="font-weight: 400;">APIMATIC-BUILD.json</span></i><span style="font-weight: 400;">.</span></li>
</ul>
<div class="row bg-editor-hr-wrap">
<div class="col-md-12 col-xs-12 col-sm-12">
<div class="row bg-editor-hr-wrap">
<div class="col-md-12 col-xs-12 col-sm-12">
<hr>
</div>
</div>
</div>
</div>
<p class=""><span style="font-weight: 400;">Place all the artifacts in a directory, including the Uber API under the </span><i><span style="font-weight: 400;">spec </span></i><span style="font-weight: 400;">directory:</span></p>
<p class=""><img class="aligncenter size-full wp-image-1629" src="https://devapi.dream.press/wp-content/uploads/2022/01/portal-directory.png" alt="" width="281" height="194"></p>
<p class=""><span style="font-weight: 400;">The </span><b>apimatic portal:generate</b><span style="font-weight: 400;"> command takes the contents of this directory to convert it into a static portal’s components.</span></p>
<p class=""><img class="aligncenter wp-image-1630 size-full" src="https://devapi.dream.press/wp-content/uploads/2022/01/portal-generated.png" alt="portal generation using cli" width="624" height="80"></p>
<p class=""><span style="font-weight: 400;">The static website can now be hosted on a hosting service of your choice, let’s say by creating a website on Netlify, and the Uber API portal is live:</span></p>
<p class=""><img class="aligncenter wp-image-1628 size-full" src="https://devapi.dream.press/wp-content/uploads/2022/01/cli-portal.gif" alt="APIMatic CLI Portal" width="1346" height="634"></p>
<h2 class=""><span style="font-weight: 400;">Transforming the API into Multiple API Formats</span></h2>
<p class=""><span style="font-weight: 400;">You can also automatically transform your API into more than </span><a href="https://www.apimatic.io/transformer/"><span style="font-weight: 400;">10 popular API specification formats</span></a><span style="font-weight: 400;"> including OpenAPI, RAML, API Blueprint, WSDL, Postman, and more. Many APIMatic users integrate automated transformations into their CI/CD pipelines via the Transformer API, which helps them take away the pain of having to manually rewrite the APIs. The same process can be replicated with a script that executes the CLI command for Transformer as well.</span></p>
<p class=""><span style="font-weight: 400;">The following example shows how the </span><b>apimatic api:transform</b><span style="font-weight: 400;"> command converts the Uber API (in OpenAPI 3.0 format) to RAML, and saves it to a specific directory:&nbsp;</span></p>
<p class=""><img class="aligncenter wp-image-1633 size-full" src="https://devapi.dream.press/wp-content/uploads/2022/01/transformed.png" alt="transform using cli" width="682" height="130"></p>
<h2 class=""><span style="font-weight: 400;">Conclusion</span></h2>
<p><span style="font-weight: 400;">Automation lets developers concentrate on business objectives and innovative solutions instead of diverting their time and efforts towards redundant tasks like maintaining documentation and building SDKs for each API update. Hence, the APIMatic CLI has been introduced as yet another automation option </span><a href="http://apimatic.io/"><span style="font-weight: 400;">among our growing toolset</span></a><span style="font-weight: 400;"> so you only need to focus on your API, while we take care of the rest.</span></p>
</div>
</div>
<p>The post <a rel="nofollow" href="/blog/automate-dx-with-apimatic-cli/">Automating Developer Experience with APIMatic CLI</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>APIMatic Java SDKs Protected Against Log4j Vulnerability</title>
		<link>/blog/protected-against-log4j-vulnerability/</link>
		
		<dc:creator><![CDATA[APIMatic]]></dc:creator>
		<pubDate>Tue, 14 Dec 2021 12:10:49 +0000</pubDate>
				<category><![CDATA[APIMATIC]]></category>
		<category><![CDATA[Apimatic]]></category>
		<category><![CDATA[auto-generated SDKs]]></category>
		<category><![CDATA[java]]></category>
		<category><![CDATA[log4j]]></category>
		<category><![CDATA[security]]></category>
		<guid isPermaLink="false">https://apimatic.io/blog/?p=1608</guid>

					<description><![CDATA[<p>Auckland, NZ – December 14, 2021: APIMatic has performed a detailed analysis of their Java SDKs and confirms that they do not contain direct Log4j v2 dependency, making the SDKs safe from the new zero-day vulnerability, CVE-2021-44228, also called as Log4Shell. Log4j &#62;= version 2.0 has become a global security threat as it allows attackers [&#8230;]</p>
<p>The post <a rel="nofollow" href="/blog/protected-against-log4j-vulnerability/">APIMatic Java SDKs Protected Against Log4j Vulnerability</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></description>
										<content:encoded><![CDATA[<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p class=""><b>Auckland, NZ – December 14, 2021</b><span style="font-weight: 400;">: APIMatic has performed a detailed analysis of their Java SDKs and confirms that they do not contain direct Log4j v2 dependency, making the SDKs safe from the new zero-day vulnerability, <em>CVE-2021-44228</em>, also called as <em>Log4Shell</em>.</span></p>
<p class=""><span style="font-weight: 400;">Log4j &gt;= version 2.0 has become a global security threat as it allows attackers to execute remote code on their targetted servers. APIMatic ran checks for their Java SDKs and found that the SDKs use SLF4J&nbsp; (1.7.30) for logging, hence the Java SDKs are not exposed to this vulnerability.</span></p>
<p class=""><span style="font-weight: 400;">APIMatic’s engineering and customer support teams are working to ensure that all users are informed about the latest updates regarding the Log4J vulnerability.&nbsp;</span></p>
<p class=""><span style="font-weight: 400;">APIMatic is a premium developer experience platform on a mission to ensure faster adoption of your API with autogenerated API documentation, multi-language SDKs, dynamic code samples, and more.</span></p>
<p class=""><span style="font-weight: 400;">Please direct any concerns or further inquiries to</span><a href="mailto:info@apimatic.io"><span style="font-weight: 400;"> info@apimatic.io</span></a><span style="font-weight: 400;">.</span></p>
</div>
</div>
</div>
</div>
<p>The post <a rel="nofollow" href="/blog/protected-against-log4j-vulnerability/">APIMatic Java SDKs Protected Against Log4j Vulnerability</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Million Mile Views via a NASA API  (no coding required)</title>
		<link>/blog/million-mile-views-via-a-nasa-api/</link>
		
		<dc:creator><![CDATA[Adeel Ali]]></dc:creator>
		<pubDate>Fri, 03 Dec 2021 04:51:29 +0000</pubDate>
				<category><![CDATA[API Documentation]]></category>
		<category><![CDATA[API Portal]]></category>
		<category><![CDATA[NASA]]></category>
		<category><![CDATA[NASA API]]></category>
		<guid isPermaLink="false">https://apimatic.io/blog/?p=1568</guid>

					<description><![CDATA[<p>APIs are meant to be used by developers, which means non-developers typically don’t get a chance to “directly access” the wealth of information provided by APIs. I faced a similar situation last week when I tried using a NASA API to observe our Earth via a satellite sitting a million miles far. The outcome: I [&#8230;]</p>
<p>The post <a rel="nofollow" href="/blog/million-mile-views-via-a-nasa-api/">Million Mile Views via a NASA API  (no coding required)</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></description>
										<content:encoded><![CDATA[		<div data-elementor-type="wp-post" data-elementor-id="5825" class="elementor elementor-5825">
									<section class="elementor-section elementor-top-section elementor-element elementor-element-2caa2cfc elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="2caa2cfc" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-1dac51b2" data-id="1dac51b2" data-element_type="column">
			<div class="elementor-widget-wrap elementor-element-populated">
								<div class="elementor-element elementor-element-13d7e0e6 elementor-widget elementor-widget-text-editor" data-id="13d7e0e6" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
			<style>/*! elementor - v3.6.4 - 13-04-2022 */
.elementor-widget-text-editor.elementor-drop-cap-view-stacked .elementor-drop-cap{background-color:#818a91;color:#fff}.elementor-widget-text-editor.elementor-drop-cap-view-framed .elementor-drop-cap{color:#818a91;border:3px solid;background-color:transparent}.elementor-widget-text-editor:not(.elementor-drop-cap-view-default) .elementor-drop-cap{margin-top:8px}.elementor-widget-text-editor:not(.elementor-drop-cap-view-default) .elementor-drop-cap-letter{width:1em;height:1em}.elementor-widget-text-editor .elementor-drop-cap{float:left;text-align:center;line-height:1;font-size:50px}.elementor-widget-text-editor .elementor-drop-cap-letter{display:inline-block}</style>				<div class="boldgrid-section"><div class="container"><div class="row"><div class="col-md-12 col-xs-12 col-sm-12"><figure id="attachment_1570" aria-describedby="caption-attachment-1570" style="width: 3000px" class="wp-caption alignnone"><img class="wp-image-1570 size-full" src="/wp-content/uploads/2021/12/download-6.png" alt="Million Mile View via NASA API | APIMatic Blog" width="3000" height="1200" /><figcaption id="caption-attachment-1570" class="wp-caption-text">Moon transition caught by EPIC in Feb 2021</figcaption></figure><p class="" style="text-align: justify;"><span style="font-weight: 400;">APIs are meant to be used by developers, which means non-developers typically don’t get a chance to “directly access” the wealth of information provided by APIs. I faced a similar situation last week when I tried using a NASA API to observe our Earth via a satellite sitting a million miles far. The outcome: I did write some code, but ended up creating API docs for non-developers to see those gorgeous views without having to write any code.</span></p><h2 class=""><strong>Background</strong></h2><p class="" style="text-align: justify;"><span style="font-weight: 400;">On November 20th, I was observing </span><a href="https://www.facebook.com/groups/ExploreNewZealand/permalink/1525141897862733/"><span style="font-weight: 400;">the recent lunar eclipse</span></a><span style="font-weight: 400;"> with my 9 years old via a telescope. That reminded me of another telescope at DSCOVR (Deep Space Climate Observatory) which captures our Earth from a million miles (details are coming below). These images are available via an </span><a href="https://epic.gsfc.nasa.gov/about/api"><span style="font-weight: 400;">API</span></a><span style="font-weight: 400;">, but getting an image on a particular date required multiple API calls, and combining the images of a single day was not an option. Combined images help see a time-lapsed view of a whole day as well as give a side-by-side view of some rare occurrences such as the moving shadow of a solar eclipse, or the back-side of our moon in transition. Therefore, I wrote a small API on top of NASA’s API and published the relevant </span><a href="https://www.apimatic.io/apidocs/nasa-epic-demo"><span style="font-weight: 400;">documentation</span></a><span style="font-weight: 400;"> of both the APIs.</span></p><h2 class=""><strong>Fasten Your Seat Belts, We’re Going Deep in Space</strong></h2><p class="" style="text-align: justify;"><span style="font-weight: 400;">Hold tight as we’re going to see our beloved planet from some distance. You can start straight away by </span><a style="font-size: 16px;" href="https://www.apimatic.io/apidocs/nasa-epic-demo/v/1_0#/http/api-endpoints/natural-color/get-solar-eclipse-days"><span style="font-weight: 400;">watching a past solar eclipse</span></a><span style="font-weight: 400;"> (hit the Try It Out button, and change the date for different eclipses). Since the telescope stays at a </span><a style="font-size: 16px;" href="https://en.wikipedia.org/wiki/Lagrange_point"><span style="font-weight: 400;">Lagrange point</span></a><span style="font-weight: 400;"> (L1), it can see the sun-lit part of the Earth 24/7. Therefore, in the case of a solar eclipse, it captures the shadow of the moon passing through different parts of our planet. The following picture depicts this scenario and became my motivation for doing this exercise.</span></p><figure id="attachment_1579" aria-describedby="caption-attachment-1579" style="width: 699px" class="wp-caption aligncenter"><img class=" wp-image-1579" src="/wp-content/uploads/2021/12/Pasted-Graphic-1-1024x686.png" alt="" width="699" height="468" /><figcaption id="caption-attachment-1579" class="wp-caption-text">August 21st, 2017, a total solar eclipse over North America</figcaption></figure><div class="mceTemp"> </div><h3 class="">A Lunar Transit</h3><p class="" style="text-align: justify;"><span style="font-weight: 400;">As you might have guessed, at a million miles away, we go well past the moon, so it gives us a chance to see the rear or dark side of the moon. Since the moon is phase-locked with Earth, we never see this side of the moon from Earth. However, thanks to DSCOVR, we can now see this spectacular view of the moon when it transits between the telescope and Earth. <a href="https://www.apimatic.io/apidocs/nasa-epic-demo/v/1_0#/java/api-endpoints/natural-color/get-lunar-transit-days">Try It Out via an API call</a>.</span><span style="font-weight: 400;"> </span></p><h2 class=""><strong>Non-Developers – How’s Been The API Experience?</strong></h2><p class="" style="text-align: justify;"><span style="font-weight: 400;">If you’re not a developer and have clicked the “Try It Out” button in either of the above links, then congratulations! You successfully called an API </span><i><span style="font-weight: 400;">without writing any code</span></i><span style="font-weight: 400;">. The left column of the </span><a href="https://www.apimatic.io/developer-experience-portal/"><span style="font-weight: 400;">API Portal</span></a><span style="font-weight: 400;"> acts as a menu to select getting started guides, API functions (also known as endpoints), and API models’ information. In the middle column (the API Code Playground) there are multiple settings to configure the output image including </span><code><b>gridColumns</b></code><span style="font-weight: 400;">(to change the image grid) and </span><code><b>imageQuality</b></code><span style="font-weight: 400;">. Any change in these settings is also reflected in the code on the right-most column. That’s how developers build sample application code based on their own input. If the code seems overwhelming, you may safely ignore it and hit the “Try It Out” button on the bottom right to immediately get the output.</span></p><figure id="attachment_1584" aria-describedby="caption-attachment-1584" style="width: 1522px" class="wp-caption alignnone"><img class="wp-image-1584 size-full" src="/wp-content/uploads/2021/12/image-5.png" alt="APIMatic Developer Experience Portal showcasing NASA API" width="1522" height="908" /><figcaption id="caption-attachment-1584" class="wp-caption-text">APIMatic&#8217;s Developer Experience Portal showcasing NASA API</figcaption></figure><h2 class="">Developers – It’s Simple yet Effective</h2><p class="" style="text-align: justify;"><span style="font-weight: 400;">You might have guessed already that the combined images are being generated via chaining a few endpoint requests to NASA’s EPIC API. The top 3 endpoints are from EPIC API, while I added the bottom 3 endpoints. Interestingly, all 3 of my endpoints are hitting the same function at the server, while I am tweaking the input at the API level using APIMatic’s editor. I could have made an app to display the combined images but opted for an API because the use case was simple enough to be directly used from the API docs. Moreover, there are <a href="https://www.apimatic.io/blog/2021/09/the-great-sdk-battle-build-vs-buy/">SDKs and Code Samples</a> available for all the endpoints, so that the API could be used in different applications.</span></p><h2 class="" style="text-align: justify;"><strong>EPIC “Blue Marble” API &#8211; What’s So Special? </strong></h2><p class="" style="text-align: justify;"><span style="font-weight: 400;">The science behind Lagrange points is quite fascinating. Parking a space station right there, and continuously capturing the Earth&#8217;s atmosphere makes EPIC API quite special. According to </span><a href="https://solarsystem.nasa.gov/missions/DSCOVR/in-depth/"><span style="font-weight: 400;">NASA </span></a><span style="font-weight: 400;">:</span></p><ul class=""><li style="text-align: justify;"><span style="font-weight: 400;">DSCOVR orbits about a million miles from Earth in a unique location called Lagrange point 1, which basically allows it to hover between the Sun and our planet.</span></li><li style="font-weight: 400; text-align: justify;"><span style="font-weight: 400;">The EPIC API provides information on the daily imagery collected by DSCOVR&#8217;s Earth Polychromatic Imaging Camera (EPIC) instrument. Uniquely positioned at the Earth-Sun Lagrange point, EPIC provides full disc imagery of the Earth and captures unique perspectives of certain astronomical events such as lunar transits using a 2048&#215;2048 pixel CCD (Charge Coupled Device) detector coupled to a 30-cm aperture Cassegrain telescope. </span></li></ul><figure id="attachment_1573" aria-describedby="caption-attachment-1573" style="width: 939px" class="wp-caption aligncenter"><img class=" wp-image-1573" src="/wp-content/uploads/2021/12/dscovr.jpg" alt="" width="939" height="725" /><figcaption id="caption-attachment-1573" class="wp-caption-text">DSCOVR orbits about 1 million miles (1.5 million kilometers) from Earth. Positioned between the Sun and Earth, this location is called Lagrange point 1. (Illustration not to scale.) Credit: NOAA</figcaption></figure><h2 class=""><strong>Conclusions</strong></h2><p class="" style="text-align: justify;"><span style="font-weight: 400;">APIs have opened up new doorways to exciting information. That information is not available to common people until developers build “apps” using the APIs. However, some of the APIs, especially the ones providing data, can be accessed by both developers and non-developers via purpose-built API docs. And if the API is as exciting as NASA’s EPIC API, then we should not keep the non-coders away from such a nice experience, especially in the booming no-code and low-code times.</span></p><p class=""><span style="font-weight: 400;">Thanks for reading. Please feel free to reach out for any suggestions and feedback at adeel@apimatic.io.</span></p><h4 class=""> </h4></div></div></div></div>						</div>
				</div>
					</div>
		</div>
							</div>
		</section>
							</div>
		<p>The post <a rel="nofollow" href="/blog/million-mile-views-via-a-nasa-api/">Million Mile Views via a NASA API  (no coding required)</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
